{"version":3,"sources":["icon.js","submenu.js","attach.js","menu.js","search-bar.js","button.js","fields/button-field.js","form-control.js","fields/help-tool-tip.js","fields/form-label.js","fields/common-field.js","fields/display-value-typography.js","fields/boolean-field.js","card.js","fields/component-field.js","flex-break.js","utils.js","fields/field.js","fields/composite-field.js","fields/date-field.js","form.js","fields/form-field.js","grid-item.js","grid.js","form-card-buttons.js","form-card.js","form-dialog.js","confirmation-dialog.js","fields/select-order.js","fields/collection-field.js","fields/list-item-field.js","fields/list-field.js","fields/re-captcha-field.js","fields/autocomplete-select.js","fields/select-field.js","tabs.js","fields/time-field.js","text.js","fields/text-field.js","fields/url-field.js","components.js","component-utils.js","inner-component.js","component.js","snackbar.js","app.js","app-container.js","register-service-worker.js","render.js","demo/components/app.js","demo/components/contact-no-mson.js","demo/components/contacts.js","demo/components/contacts-local-storage.js","demo/components/contacts-firebase.js","demo/components/edit-contact.js","demo/components/fields-screen.js","demo/components/fields.js","demo/components/form-builder.js","demo/components/grid.js","demo/components/home.js","demo/components/tasks.js","demo/components/tasks-local-storage.js","demo/components/tasks-firebase.js","field-editor-form.js","form-editor.js","demo/app.js","demo/index.js"],"names":["Icon","handleClick","event","props","onClick","svgIconName","snakeCase","this","className","icon","iconContents","toFontIconName","React","PureComponent","Submenu","item","items","setState","open","state","onNavigate","onDrawerToggle","childSelected","path","each","classes","listItems","forEach","index","isSelected","classNames","secondary","push","selected","roles","registrar","client","user","hasRole","hidden","ListItem","button","nested","key","ListItemText","disableTypography","primary","Typography","variant","join","label","Collapse","in","timeout","unmountOnExit","List","disablePadding","withStyles","theme","paddingLeft","spacing","color","palette","text","fontWeight","attach","_watchProps","componentOrName","Component","wasMounted","getComponent","component","handleFieldChange","name","value","watchProps","indexOf","difference","Object","keys","hasComponent","get","prevProps","removeListener","addListener","setInitialState","on","initialState","Menu","handleDrawerToggle","handleNavigate","menuItem","submenus","mobileOpen","responsive","drawer","drawerHeader","Divider","temporaryDrawer","Drawer","anchor","direction","paper","drawerPaper","onClose","ModalProps","keepMounted","permanentDrawer","drawPaperResponsive","Hidden","mdUp","smDown","implementation","mixins","toolbar","paddingTop","width","breakpoints","up","position","height","withTheme","SearchBar","autoFullWidth","handleKeyUp","keyCode","onSearch","searchString","handleClearSearch","handleFocus","handleBlur","onChange","fullWidth","full","grow","InputProps","disableUnderline","input","textFieldInput","onKeyUp","target","textField","onFocus","onBlur","iconContainer","searchIcon","IconButton","aria-label","closeIcon","borderRadius","backgroundColor","fontSize","typography","subtitle1","padding","marginTop","common","white","top","left","right","flexGrow","Button","type","disabled","leftIcon","marginRight","ButtonField","emitClick","FormControl","children","marginBottom","fullWidthClassName","noMarginBottomClassName","noMarginBottom","formControl","margin","HelpToolTip","help","Tooltip","disableTouchListener","title","FormLabel","shrink","childProps","assign","undefined","noShrink","caption","CommonField","fld","required","err","editable","touched","hideLabelUI","hideLabel","useDisplayValue","shrinkLabel","inlineLabel","autoHideLabel","lbl","isBlank","id","getUniqueId","labelText","htmlFor","error","InputLabel","firstErr","getFirstErr","FormHelperText","DisplayValueTypography","root","display","BooleanField","handleChange","setValue","checked","FormControlLabel","control","Switch","getDisplayValue","Card","content","container","justify","xs","sm","md","lg","Paper","wrap","flex","ComponentField","marginLeft","FlexBreak","break","definedProps","Field","block","accessEditable","didCreate","noBlock","getClassName","componentUtils","getUIComponent","Fragment","utils","getIfDefined","CompositeField","fields","lastIsBlock","first","eachField","field","last","DateField","handleDateChange","date","setTouched","includeTime","minDate","maxDate","dis","DateTimePicker","DatePicker","DateFnsUtils","clearable","Form","fieldsCanAccess","handleSave","preventDefault","validate","getErrs","length","submit","turnOnAutoValidate","access","calcFieldsCanAccess","set","autoValidate","mode","getFields","ignoreErrs","prevState","adjustAccess","formTag","isLoading","getKey","flds","map","onSubmit","FormField","form","flexFlow","GridItem","xl","Grid","FormCardButtons","forbidUpdate","forbidDelete","archivedAt","onEdit","onDelete","updateButton","deleteButton","FormCard","handleEdit","handleDelete","cursor","FormDialog","saveClicked","previousMode","handleClose","withCancelButton","onCancel","currentForm","disableSubmit","onSave","CollectionFieldCore","MODES","DELETE","fullScreen","disableSave","hasErrorForTouchedField","isOpen","buttons","Dialog","aria-labelledby","DialogContent","DialogActions","withMobileDialog","ConfirmationDialog","yes","alert","aria-describedby","DialogTitle","DialogContentText","autoFocus","SelectOrder","sortOrder","sortBy","flipped","options","option","MenuItem","Select","flip","transform","getItemStyle","isDragging","draggableStyle","userSelect","background","getListStyle","isDraggingOver","grey","CollectionField","confirmationOpen","handleCancel","preventReadAction","READ","UPDATE","handleNew","CREATE","a","save","formToDelete","preventDeleteAction","getValue","restore","confirmationTitle","handleConfirmationClose","archive","handleOrdering","order","onDragEnd","result","destination","source","moveAndSaveForm","sourceIndex","destinationIndex","canCreate","canUpdate","canArchive","bufferTopId","_infiniteLoader","resizeSpacer","spacerHeight","setSpacerResizing","change","forbidOrder","showArchived","maxGrids","maxColumns","cards","getForms","setEditable","getUniqueItemId","canDrag","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDefaultField","numCards","forbidCreate","forbidSort","store","singularLabel","getSingularLabel","reachedMax","showNewButton","canOrder","sortOptions","showOrder","align","noResults","preventUpdate","toLowerCase","spacerStyle","spacerId","cardContainer","droppableId","placeholder","showNoRecords","header","spacer","footer","animation","ListItemField","emit","allowDelete","ListField","createField","autoCreateFields","canDeleteEmpty","hideDeleteButton","fieldIsBlank","ReCAPTCHAField","isEditable","siteKey","globals","captcha","sitekey","inputComponent","inputRef","components","Control","optionalProps","selectProps","inputProps","innerProps","textFieldProps","square","MultiValue","Chip","tabIndex","chip","chipFocused","isFocused","isDisabled","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","SingleValue","singleValue","ValueContainer","valueContainer","AutoCompleteSelect","isClearable","onInputChange","isMulti","selectStyles","dropdownIndicator","base","clearIndicator","menuPortal","zIndex","styles","menuPortalTarget","document","body","minWidth","flexWrap","alignItems","emphasize","SelectField","focus","multiple","val","blankString","opts","Checkbox","autocomplete","fieldValue","renderValue","Input","chips","getOptionLabel","autocompleteValue","isValueBlank","handleAutocompleteChange","renderOptions","displayValue","Tabs","itemName","emitChange","AppBar","elevation","indicatorColor","textColor","scrollButtons","Tab","TimeField","showSeconds","TimePicker","seconds","invalidDateMessage","Text","TextField","fromUIValue","TextMaskCustom","other","mask","inputElement","maxLength","multiline","rows","rowsMax","optional","uiValue","getUIValue","URLField","newWindow","href","ChainedSelectField","ChainedSelectListField","IdField","IntegerField","MoneyField","NumberField","PhoneField","SelectListField","TextListField","User","compiler","isCompiled","Parent","getPrototypeOf","constructor","ancestorName","getOldestCompiledAncestor","Ancestor","InnerComponent","handlerName","charAt","toUpperCase","slice","addChangeListener","removeChangeListener","others","definition","newComponent","createComponent","destroy","comp","Snackbar","reason","message","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","close","App","snackbarOpen","snackbarMessage","nextMenuItem","showArchivedToggle","searchStringInput","showSearch","showSearchOnMobile","callback","has","displayConfirmation","force","Action","run","history","confirmation","switchContent","parameters","emitUnload","isAction","location","menu","route","toRoute","queryString","search","substr","hash","parentItem","getParent","requireAccess","emitLoad","canSearch","onLocation","pathname","handleSnackbarClose","handleArchivedChange","window","scrollTo","handleSearchStringInputChange","handleSearch","toggleShowSearch","setGlobalOnNavigate","setOnNavigate","redirectPath","getItemAndParsePath","params","redirectAfterLogin","emitLoggedOut","canAccess","displaySnackbar","redirect","navigateTo","unlisten","listen","awaitSession","addEventListener","e","showArchivedChecked","archivedToggle","searchBox","alignRight","isResponsive","navIconHide","noWrap","onMobile","isWidthDown","bar","menuButton","appBar","appBarResponsive","Toolbar","menuAlwaysTemporary","menuSidebar","fullScreenStyle","appFrame","contentResponsive","overflow","default","withWidth","withRouter","createMuiTheme","blueGrey","lightBlue","useNextVariants","AppContainer","basename","CssBaseline","getUserConfirmation","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","swUrl","fetch","then","response","status","headers","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","render","getElementById","registerServiceWorker","ContactNoMSON","EmailField","setValues","firstName","lastName","email","values","getValues","registerComponent","schema","formFactory","product","storeName","apiKey","authDomain","projectId","collection","baseForm","listeners","actions","storeWhere","addressLine1","addressLine2","city","stateProvince","postalCode","country","github","medium","twitter","if","$ne","else","chainedSelectOptions","parentValue","elevate","fieldFactory","FieldEditorForm","handleValueChange","componentName","clearErr","isField","preview","card","CardContent","gutterBottom","overflowY","maxHeight","FormEditor","reCAPTCHASiteKey","uiComponents","FieldEditorFormUI","FormEditorUI","FormBuilder"],"mappings":"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","file":"static/js/main.2be8c28f.chunk.js","sourcesContent":["import React from 'react';\nimport IconMui from '@material-ui/core/Icon';\nimport snakeCase from 'lodash/snakeCase';\n\n// Note: we use font icons instead of SVG icons as this allows us to support any icon dynamically\n// without adding all icons to the JS bundle. The MaterialUI icons are about 54KB which is\n// substantially smaller than their SVG counterparts.\n//\n// import * as Icons from '@material-ui/icons';\n\nexport default class Icon extends React.PureComponent {\n  handleClick = event => {\n    if (this.props.onClick) {\n      this.props.onClick(event);\n    }\n  };\n\n  // Convert to the font icon name so that we can use the SVG Icon names. This allows us to make\n  // changes to this logic without changing the calling code.\n  toFontIconName(svgIconName) {\n    return snakeCase(svgIconName);\n  }\n\n  render() {\n    const { className, icon } = this.props;\n\n    const iconContents = icon ? this.toFontIconName(icon) : null;\n\n    return (\n      <IconMui className={className} onClick={this.handleClick}>\n        {iconContents}\n      </IconMui>\n    );\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from './icon';\nimport each from 'lodash/each';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  primary: {\n    color: theme.palette.text.primary\n  },\n  secondary: {\n    color: theme.palette.text.secondary\n  },\n  selected: {\n    fontWeight: 'bold'\n  }\n});\n\nclass Submenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: this.childSelected()\n    };\n  }\n\n  childSelected() {\n    const { item, path } = this.props;\n\n    let childSelected = false;\n\n    each(item.items, item => {\n      if (path === item.path) {\n        childSelected = true;\n        return false; // exit loop\n      }\n    });\n\n    return childSelected;\n  }\n\n  handleClick = item => {\n    // Has sub items?\n    if (item.items) {\n      this.setState({ open: !this.state.open });\n    } else {\n      // Note: the navigation is handled by the parent as we want to be able to prevent the\n      // navigation if say a form is dirty, etc...\n      if (this.props.onNavigate) {\n        this.props.onNavigate(item);\n      }\n\n      if (this.props.onDrawerToggle) {\n        // Close the drawer\n        this.props.onDrawerToggle();\n      }\n    }\n  };\n\n  items() {\n    const { classes, item, path } = this.props;\n    const listItems = [];\n    item.items.forEach((item, index) => {\n      const isSelected = path === item.path;\n      let classNames = [classes.secondary];\n      if (isSelected) {\n        classNames.push(classes.selected);\n      }\n\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        listItems.push(\n          <ListItem\n            button\n            className={classes.nested}\n            key={index}\n            onClick={() => this.handleClick(item)}\n          >\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"body2\" className={classNames.join(' ')}>\n                  {item.label}\n                </Typography>\n              }\n            />\n          </ListItem>\n        );\n      }\n    });\n    return listItems;\n  }\n\n  render() {\n    const { item, classes, path } = this.props;\n    const items = item.items ? this.items() : null;\n\n    const isSelected = path === item.path;\n    let classNames = [classes.primary];\n    if (isSelected) {\n      classNames.push(classes.selected);\n    }\n\n    let listItems = null;\n    if (items) {\n      listItems = (\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List disablePadding>{this.items()}</List>\n        </Collapse>\n      );\n    }\n\n    return (\n      <div>\n        <ListItem button onClick={() => this.handleClick(item)}>\n          <ListItemText\n            disableTypography\n            primary={\n              <Typography variant=\"subtitle1\" className={classNames.join(' ')}>\n                {item.label}\n              </Typography>\n            }\n          />\n          {items ? (\n            this.state.open ? (\n              <Icon icon=\"ExpandLess\" />\n            ) : (\n              <Icon icon=\"ExpandMore\" />\n            )\n          ) : null}\n        </ListItem>\n        {listItems}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Submenu);\n","import React from 'react';\nimport difference from 'lodash/difference';\n\n// Usage: attach(['prop1', 'prop2', ...], componentOrName)(Component)\n\nconst attach = (_watchProps, componentOrName) => {\n  return Component => {\n    return class extends React.PureComponent {\n      wasMounted = false;\n\n      getComponent = props => {\n        if (!props) {\n          props = this.props;\n        }\n\n        if (!componentOrName) {\n          return props.component;\n        } else if (typeof componentOrName === 'string') {\n          return props[componentOrName];\n        } else {\n          // componentOrName is a component\n          return componentOrName;\n        }\n      };\n\n      // The component can be created at any time, e.g. when the definition is set. Therefore, we\n      // need to handle a missing component until the component is present.\n      hasComponent() {\n        return !!this.getComponent();\n      }\n\n      constructor(props) {\n        super(props);\n\n        // The field props that we want to expose in the state. Remove any names that are in\n        // this.props so that we can override those values.\n        this.watchProps = difference(_watchProps, Object.keys(this.props));\n\n        // These values need to be in the state so that the component is rerendered when they change.\n        if (this.hasComponent()) {\n          this.state = this.getComponent().get(this.watchProps);\n        }\n      }\n\n      handleFieldChange = (name, value) => {\n        if (this.watchProps.indexOf(name) !== -1) {\n          // Is the component mounted? Prevent a race condition where the handler tries to set the\n          // state after the component has been unmounted.\n          if (this.wasMounted) {\n            this.setState({ [name]: value });\n          }\n        }\n      };\n\n      componentDidUpdate(prevProps) {\n        if (this.getComponent() !== this.getComponent(prevProps)) {\n          // The component is changing so recreate the listener\n          this.removeListener();\n          this.addListener();\n\n          // Set the initial state as the component has changed\n          this.setInitialState();\n        }\n      }\n\n      addListener() {\n        if (this.hasComponent()) {\n          this.getComponent().on('$change', this.handleFieldChange);\n        }\n      }\n\n      removeListener() {\n        if (this.hasComponent()) {\n          this.getComponent().removeListener('$change', this.handleFieldChange);\n        }\n      }\n\n      setInitialState() {\n        if (this.hasComponent()) {\n          const initialState = this.getComponent().get(this.watchProps);\n          this.setState(initialState);\n        }\n      }\n\n      componentDidMount() {\n        // Note: we have to use componentDidMount and not componentWillMount as handleFieldChange\n        // can change the state and we aren't allowed to change the state until the component has\n        // mounted.\n\n        this.wasMounted = true;\n\n        this.addListener();\n\n        // Update state with any changes that have occured since construction, but before mounting\n        this.setInitialState();\n      }\n\n      componentWillUnmount() {\n        this.removeListener();\n        this.wasMounted = false;\n      }\n\n      render() {\n        return <Component {...this.state} {...this.props} />;\n      }\n    };\n  };\n};\n\nexport default attach;\n","// TODO: when click on another section, close other sections? Requires moving menu state to app?\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Submenu from './submenu';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(1)\n  },\n  drawerPaper: {\n    width: 250\n  },\n  drawPaperResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      // position: 'relative',\n      // height: '100%',\n\n      // Extend to bottom of screen. TODO: does this work on mobile?\n      // https://stackoverflow.com/a/48506883/2831606\n      position: 'fixed',\n      height: '100vh'\n    }\n  }\n});\n\nclass Menu extends React.PureComponent {\n  handleDrawerToggle = () => {\n    if (this.props.onDrawerToggle) {\n      this.props.onDrawerToggle();\n    }\n  };\n\n  handleNavigate = menuItem => {\n    if (this.props.onNavigate) {\n      this.props.onNavigate(menuItem);\n    }\n  };\n\n  items() {\n    const { component, path } = this.props;\n    const items = component.get('items');\n    const submenus = [];\n    items.forEach((item, index) => {\n      // Has access to item?\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        submenus.push(\n          <Submenu\n            item={item}\n            key={index}\n            onNavigate={this.handleNavigate}\n            path={path}\n            onDrawerToggle={this.handleDrawerToggle}\n          />\n        );\n      }\n    });\n    return submenus;\n  }\n\n  render() {\n    const { classes, theme, mobileOpen, responsive /*, roles*/ } = this.props;\n\n    let items = null;\n    // if (!roles || (registrar.client && registrar.client.user.hasRole(roles))) {\n    items = this.items();\n    // }\n\n    const drawer = (\n      <div>\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h4\">Logo</Typography>\n        </div>\n        <Divider />\n        {items}\n      </div>\n    );\n\n    const temporaryDrawer = (\n      <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        onClose={this.handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true // Better open performance on mobile.\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    const permanentDrawer = (\n      <Drawer\n        variant=\"permanent\"\n        open\n        classes={{\n          paper:\n            classes.drawerPaper +\n            (responsive ? ` ${classes.drawPaperResponsive}` : '')\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    if (responsive) {\n      return (\n        <div>\n          <Hidden mdUp>{temporaryDrawer}</Hidden>\n          <Hidden smDown implementation=\"css\">\n            {permanentDrawer}\n          </Hidden>\n        </div>\n      );\n    } else {\n      return temporaryDrawer;\n    }\n  }\n}\n\nMenu = withStyles(styles, { withTheme: true })(Menu);\nMenu = attach(['items' /*, 'roles'*/])(Menu);\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport classNames from 'classnames';\n\n// TODO: see https://material-ui-next.com/style/icons/#icons and implement:\n// 1. Mouseover to change background color\n\nconst styles = theme => ({\n  textField: {\n    width: '100%'\n  },\n\n  textFieldInput: {\n    borderRadius: 3,\n    backgroundColor: theme.palette.primary[400],\n    fontSize: theme.typography.subtitle1.fontSize,\n    padding: '10px 34px 10px 34px',\n    marginTop: '2px',\n    width: 'calc(100%)',\n    color: theme.palette.common.white\n  },\n\n  // Needed so that relative components don't take up any space\n  iconContainer: {\n    position: 'relative',\n    width: '100%', // Set 100% so that we can position the close icon relative to this\n    height: '0px'\n  },\n\n  searchIcon: {\n    position: 'absolute',\n    top: '-31px',\n    left: '6px'\n  },\n\n  closeIcon: {\n    position: 'absolute',\n    top: '-43px',\n    right: '-5px'\n  },\n\n  grow: {\n    flexGrow: 1\n  }\n});\n\nclass SearchBar extends React.PureComponent {\n  state = { autoFullWidth: false };\n\n  handleKeyUp = event => {\n    // Enter pressed?\n    if (event.keyCode === 13) {\n      this.props.onSearch(this.props.searchString);\n    }\n  };\n\n  handleClearSearch = event => {\n    this.props.onSearch('');\n  };\n\n  handleFocus = () => {\n    this.setState({ autoFullWidth: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ autoFullWidth: false });\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      searchString,\n      onChange,\n      fullWidth\n    } = this.props;\n\n    const { autoFullWidth } = this.state;\n\n    const full = fullWidth || autoFullWidth;\n\n    return (\n      <div className={classNames(className, full ? classes.grow : null)}>\n        <TextField\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              input: classes.textFieldInput\n            }\n          }}\n          value={searchString}\n          onKeyUp={this.handleKeyUp}\n          onChange={event => onChange(event.target.value)}\n          className={classes.textField}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n        />\n        <div className={classes.iconContainer}>\n          <Icon icon=\"Search\" className={classes.searchIcon} />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"clear search\"\n            onClick={this.handleClearSearch}\n            className={classes.closeIcon}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nSearchBar = withStyles(styles)(SearchBar);\n\nexport default SearchBar;\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Icon from './icon';\n\nconst styles = theme => ({\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  marginTop: {\n    marginTop: theme.spacing(3)\n  }\n});\n\nclass Button extends React.PureComponent {\n  handleClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      type,\n      disabled,\n      label,\n      icon,\n      fullWidth,\n      variant,\n      marginTop\n    } = this.props;\n\n    const className = marginTop !== false ? classes.marginTop : null;\n\n    return (\n      <ButtonMui\n        className={className}\n        type={type}\n        color=\"primary\"\n        disabled={disabled}\n        onClick={this.handleClick}\n        fullWidth={fullWidth}\n        variant={variant}\n      >\n        {icon ? <Icon className={classes.leftIcon} icon={icon} /> : null}\n        {label}\n      </ButtonMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(Button);\n","import React from 'react';\nimport attach from '../attach';\nimport Button from '../button';\n\nclass ButtonField extends React.PureComponent {\n  handleClick = () => {\n    const { type } = this.props;\n\n    // Is the button not a submit button? Let the form handle submit buttons so that the form\n    // performs the validation\n    if (type !== 'submit') {\n      this.props.component.emitClick();\n    }\n  };\n\n  render() {\n    const { label, type, disabled, icon, fullWidth, variant } = this.props;\n    return (\n      <Button\n        type={type}\n        label={label}\n        disabled={disabled}\n        onClick={this.handleClick}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n      />\n    );\n  }\n}\n\nexport default attach([\n  'label',\n  'type',\n  'disabled',\n  'icon',\n  'fullWidth',\n  'variant'\n])(ButtonField);\n","import React from 'react';\nimport FormControlMU from '@material-ui/core/FormControl';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  fullWidth: {\n    // TODO: bug in material ui?\n    width: `calc(100% - ${theme.spacing(2)}px)`\n  },\n  noMarginBottom: {\n    marginBottom: 0\n  }\n});\n\nclass FormControl extends React.PureComponent {\n  render() {\n    const { fullWidth, children, classes, marginBottom } = this.props;\n\n    const fullWidthClassName = fullWidth ? classes.fullWidth : '';\n    const noMarginBottomClassName =\n      marginBottom === false ? classes.noMarginBottom : '';\n\n    return (\n      <FormControlMU\n        fullWidth={fullWidth}\n        className={`${classes.formControl} ${fullWidthClassName} ${noMarginBottomClassName}`}\n      >\n        {children}\n      </FormControlMU>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormControl);\n","// TODO: make full width of field include right margin if there is help?\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '../icon';\n\nexport default class HelpToolTip extends React.PureComponent {\n  render() {\n    const { help } = this.props;\n\n    // Note: we use disableTouchListener as otherwise the user needs to press and hold before the\n    // tooltip appears, something that is not intuitive. With this configuration, the user can just\n    // click the button to view the tooltip.\n    return (\n      <Tooltip disableTouchListener title={help}>\n        <IconButton aria-label=\"Help\">\n          <Icon icon=\"HelpOutline\" />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport FormLabelMui from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  shrink: {\n    ...Object.assign({}, theme.typography.caption, { color: undefined })\n  },\n  noShrink: {\n    ...Object.assign({}, theme.typography.subtitle1, { color: undefined })\n  }\n});\n\nclass FormLabel extends React.PureComponent {\n  render() {\n    const { children, classes, shrink } = this.props;\n\n    const childProps = Object.assign({}, this.props, {\n      shrink: undefined,\n      classes: undefined\n    });\n\n    const className = shrink ? classes.shrink : classes.noShrink;\n\n    return (\n      <FormLabelMui {...childProps} className={className}>\n        {children}\n      </FormLabelMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormLabel);\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '../form-control';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FormLabel from './form-label';\n\nclass CommonField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      children,\n      label,\n      required,\n      fullWidth,\n      err,\n      editable,\n      touched,\n      help,\n      hideLabelUI,\n      hideLabel,\n      useDisplayValue,\n      shrinkLabel,\n      inlineLabel,\n      marginBottom,\n      autoHideLabel\n    } = this.props;\n\n    let fld = null;\n\n    let lbl = null;\n\n    const isBlank = component.isBlank();\n\n    const id = component.getUniqueId();\n\n    if (!hideLabelUI && !hideLabel && (!autoHideLabel || label)) {\n      if (editable && !useDisplayValue && !inlineLabel) {\n        lbl = (\n          <InputLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            // If label is blank then don't show as required\n            required={label && required}\n            shrink={shrinkLabel}\n          >\n            {label}\n          </InputLabel>\n        );\n      } else {\n        // We display a non-breaking space when the label is empty so that CompositeFields, like the\n        // ChainedSelectField, print all their display values on the same line.\n        const labelText = label ? label : '\\u00A0';\n\n        lbl = (\n          <FormLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            required={required && !useDisplayValue && editable}\n            shrink={useDisplayValue || !editable || shrinkLabel}\n          >\n            {labelText}\n          </FormLabel>\n        );\n\n        if (!inlineLabel) {\n          // We wrap the label in a div tag so that the proceeding display value appears on a\n          // different line\n          lbl = <div>{lbl}</div>;\n        }\n      }\n    }\n\n    const firstErr = component.getFirstErr();\n\n    fld = (\n      <span>\n        {lbl}\n        {children}\n        {help && editable ? <HelpToolTip help={help} /> : ''}\n        {touched && err ? (\n          <FormHelperText error>{firstErr}</FormHelperText>\n        ) : null}\n      </span>\n    );\n\n    if (editable || !isBlank) {\n      return (\n        <FormControl fullWidth={fullWidth} marginBottom={marginBottom}>\n          {fld}\n        </FormControl>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n// 'value' is needed in the event we are showing the display value\nCommonField = attach([\n  'label',\n  'required',\n  'fullWidth',\n  'value',\n  'err',\n  'editable',\n  'touched',\n  'help',\n  'hideLabel',\n  'useDisplayValue',\n  'autoHideLabel'\n])(CommonField);\n\nexport default CommonField;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    display: 'inline-block'\n  }\n});\n\nclass DisplayValueTypography extends React.PureComponent {\n  render() {\n    const { children, classes } = this.props;\n\n    // We use a span tag so that the element is inline\n    return (\n      <Typography variant=\"subtitle1\" component=\"span\" className={classes.root}>\n        {children}\n      </Typography>\n    );\n  }\n}\n\nexport default withStyles(styles)(DisplayValueTypography);\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DisplayValueTypography from './display-value-typography';\n\nclass BooleanField extends React.PureComponent {\n  handleChange = event => {\n    this.props.component.setValue(event.target.checked);\n  };\n\n  render() {\n    const {\n      value,\n      disabled,\n      component,\n      editable,\n      useDisplayValue,\n      label\n    } = this.props;\n\n    let hideLabelUI = null;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      hideLabelUI = true;\n      fld = (\n        <FormControlLabel\n          control={\n            <Switch\n              checked={value ? value : false}\n              onChange={this.handleChange}\n              value=\"true\"\n              disabled={disabled}\n            />\n          }\n          label={label}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} hideLabelUI={hideLabelUI}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'disabled',\n  'editable',\n  'useDisplayValue',\n  'label'\n])(BooleanField);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2)\n  },\n  content: {\n    flex: 1 // TODO: needed?\n  }\n});\n\nclass Card extends React.PureComponent {\n  render() {\n    const { classes, component } = this.props;\n\n    const content = component.get('content');\n    const title = component.get('title');\n\n    return (\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\">\n              <Grid item className={classes.content}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {title}\n                </Typography>\n                <Component component={content} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\nimport attach from '../attach';\nimport Component from '../component';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    marginLeft: theme.spacing(1)\n  }\n});\n\nclass ComponentField extends React.PureComponent {\n  render() {\n    const { content, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Component component={content} />\n      </div>\n    );\n  }\n}\n\nComponentField = withStyles(styles)(ComponentField);\nComponentField = attach(['content'])(ComponentField);\nexport default ComponentField;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  // break: {\n  //   flexBasis: '100%',\n  //   width: '0px',\n  //   height: '0px',\n  //   overflow: 'hidden'\n  // }\n  break: {\n    width: '100%'\n  }\n});\n\nclass FlexBreak extends React.PureComponent {\n  render() {\n    const { classes } = this.props;\n    return <div className={classes.break} />;\n  }\n}\n\nexport default withStyles(styles)(FlexBreak);\n","import each from 'lodash/each';\nclass Utils {\n  getIfDefined(props) {\n    const definedProps = {};\n    each(props, (value, name) => {\n      if (value !== undefined) {\n        definedProps[name] = value;\n      }\n    });\n    return definedProps;\n  }\n}\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from '../component-utils';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport utils from '../utils';\n\n// Use MSON React Component instead?\nclass Field extends React.PureComponent {\n  render() {\n    const {\n      component,\n      hidden,\n      block,\n      accessEditable,\n      didCreate,\n      noBlock,\n      disabled\n    } = this.props;\n\n    // Don't show the component until didCreate is true as we may need to wait for fields to be\n    // hidden or otherwise modified by listeners\n    if (hidden || !didCreate) {\n      return null;\n    } else if (component.getClassName() === 'Field') {\n      // Prevent an infinite loop caused by trying to render component=Field\n      return null;\n    } else {\n      // Get corresponding UI component\n      const Field = componentUtils.getUIComponent(component);\n\n      // Note: we use React.Fragment over a span as spans can cause issues with the flexbox layout\n      // when displaying a nested form\n      return (\n        <React.Fragment>\n          <Field\n            component={component}\n            accessEditable={accessEditable}\n            block={block}\n            {...utils.getIfDefined({ disabled })}\n          />\n          {!noBlock && block ? <FlexBreak /> : null}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'block', 'didCreate'])(Field);\n","import React from 'react';\nimport Field from './field';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FlexBreak from '../flex-break';\n\nclass CompositeField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      help,\n      editable,\n      useDisplayValue,\n      block,\n      disabled\n    } = this.props;\n\n    let fields = [];\n\n    let lastIsBlock = false;\n\n    let first = true;\n\n    component.eachField((field, index, last) => {\n      // Don't show the field if we are using the display value and it is blank, e.g. it is the\n      // empty \"next\" field.\n      if (first || !useDisplayValue || !field.isBlank()) {\n        if (last && field.get('block')) {\n          lastIsBlock = true;\n        }\n        fields.push(\n          <Field\n            component={field}\n            key={index}\n            noBlock={last}\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (help && editable) {\n      fields.push(<HelpToolTip help={help} key=\"help\" />);\n    }\n\n    if (lastIsBlock && block !== false) {\n      // Break after any help\n      fields.push(<FlexBreak key=\"break\" />);\n    }\n\n    return fields;\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach(['change', 'help', 'editable', 'useDisplayValue'])(\n  CompositeField\n);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport {\n  MuiPickersUtilsProvider,\n  DateTimePicker,\n  DatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = theme => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass DateField extends React.PureComponent {\n  handleDateChange = date => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      includeTime,\n      editable,\n      useDisplayValue,\n      minDate,\n      maxDate,\n      fullWidth,\n      disabled,\n      accessEditable\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    const Component = includeTime ? DateTimePicker : DatePicker;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <Component\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              minDate={minDate}\n              maxDate={maxDate}\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nDateField = withStyles(styles)(DateField);\n\nexport default attach([\n  'value',\n  'includeTime',\n  'editable',\n  'useDisplayValue',\n  'minDate',\n  'maxDate',\n  'fullWidth',\n  'disabled'\n])(DateField);\n","import React from 'react';\nimport Field from './fields/field';\nimport attach from './attach';\nimport access from 'mson/lib/access';\n\nclass Form extends React.PureComponent {\n  state = {\n    fieldsCanAccess: null\n  };\n\n  // Enable automatic validation whenever a user changes data. This feature allows the user to see\n  // errors in real-time.\n  turnOnAutoValidate() {\n    this.props.component.set({ autoValidate: true });\n  }\n\n  calcFieldsCanAccess() {\n    const { component, mode } = this.props;\n    const canDowngrade = true;\n    const fieldsCanAccess = access.fieldsCanAccess(\n      // Default to update so that access control has a sensible default\n      mode ? mode : 'update',\n      component,\n      null,\n      canDowngrade\n    );\n\n    // We need to set the ignoreErrs state as there may be a field that is not accessible that is\n    // generating an error.\n    for (const field of component.getFields()) {\n      const ignoreErrs = fieldsCanAccess[field.get('name')] === undefined;\n      field.set({ ignoreErrs });\n    }\n\n    return fieldsCanAccess;\n  }\n\n  adjustAccess() {\n    let fieldsCanAccess = null;\n\n    // Was access specified? We check the form instead of this.props.access as this.props.access may\n    // not have been updated yet.\n    if (this.props.component.get('access')) {\n      fieldsCanAccess = this.calcFieldsCanAccess();\n    }\n\n    this.setState({ fieldsCanAccess });\n  }\n\n  constructor(props) {\n    super(props);\n    this.turnOnAutoValidate();\n\n    if (props.access) {\n      const fieldsCanAccess = this.calcFieldsCanAccess();\n      this.state.fieldsCanAccess = fieldsCanAccess;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { component, access, mode } = this.props;\n\n    // Did the form change?\n    if (prevProps.component !== component) {\n      this.turnOnAutoValidate();\n    }\n\n    // Did the access, mode or form change?\n    if (\n      prevProps.access !== access ||\n      prevProps.mode !== mode ||\n      prevProps.component !== component ||\n      prevProps.value !== this.props.value\n    ) {\n      this.adjustAccess();\n    }\n  }\n\n  handleSave = event => {\n    // Stop the form from refreshing the page. We can't rely on the default functionality as there\n    // may be form errors that need to stop the form from submitting.\n    event.preventDefault();\n\n    // No errors?\n    const { component } = this.props;\n\n    // Is the submit action enabled?\n    if (!component.get('disableSubmit')) {\n      component.setTouched(true);\n      component.validate();\n      if (component.getErrs().length === 0) {\n        component.submit();\n      }\n    }\n  };\n\n  render() {\n    const { component, formTag, isLoading, disabled } = this.props;\n    const { fieldsCanAccess } = this.state;\n    const fields = component.get('fields');\n\n    // Hide until the data has finished loading\n    if (isLoading) {\n      return null;\n    }\n\n    // The form key is needed or else React will not re-render all fields when the field indexes are\n    // the same and we switch from route to another.\n    const key = component.getKey();\n\n    const flds = fields.map((field, index) => {\n      if (\n        fieldsCanAccess === null ||\n        fieldsCanAccess[field.get('name')] !== undefined\n      ) {\n        let accessEditable = null;\n        if (\n          fieldsCanAccess !== null &&\n          fieldsCanAccess[field.get('name')] === 'read'\n        ) {\n          accessEditable = false;\n        }\n        return (\n          <Field\n            key={key + '_' + index}\n            component={field}\n            accessEditable={accessEditable}\n            disabled={disabled}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n\n    if (formTag !== false) {\n      return <form onSubmit={this.handleSave}>{flds}</form>;\n    } else {\n      return flds;\n    }\n  }\n}\n\nexport default attach([\n  'access',\n  'mode',\n  'isLoading',\n\n  // We listen for a change to fields so that we can render when a field is added\n  'change',\n  'value'\n])(Form);\n","import React from 'react';\nimport CommonField from './common-field';\nimport Component from '../component';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    marginLeft: theme.spacing(2),\n\n    // The following flex properties are needed so that we can set a margin for all fields in the\n    // nested form\n    display: 'flex',\n    flexFlow: 'wrap'\n  }\n});\n\nclass FormField extends React.PureComponent {\n  render() {\n    const { component, hideLabel, classes, disabled } = this.props;\n\n    const isBlank = component.isBlank();\n\n    const form = component.get('form');\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n            marginBottom={false}\n          />\n        )}\n        <FlexBreak />\n        <span className={classes.root}>\n          <Component component={form} formTag={false} disabled={disabled} />\n        </span>\n      </span>\n    );\n  }\n}\n\nFormField = withStyles(styles)(FormField);\n\nexport default attach([\n  'hideLabel',\n  'value' // Changes when the value is or isn't blank\n])(FormField);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport Component from './component';\n\nclass GridItem extends React.PureComponent {\n  render() {\n    const { hidden, content, xl, lg, md, sm, xs } = this.props;\n    if (hidden) {\n      return null;\n    } else {\n      return (\n        <GridMui item xl={xl} lg={lg} md={md} sm={sm} xs={xs}>\n          <Component component={content} />\n        </GridMui>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'content', 'xl', 'lg', 'md', 'sm', 'xs'])(\n  GridItem\n);\n","import React from 'react';\nimport attach from './attach';\nimport GridMui from '@material-ui/core/Grid';\nimport GridItem from './grid-item';\n\nclass Grid extends React.PureComponent {\n  render() {\n    return (\n      <GridMui container>\n        {this.props.items.map((item, index) => (\n          <GridItem component={item} key={index} />\n        ))}\n      </GridMui>\n    );\n  }\n}\n\nexport default attach(['items'])(Grid);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\n// import Menu from '@material-ui/core/Menu';\n// import MenuItem from '@material-ui/core/Menu/MenuItem';\n// import ListItemIcon from '@material-ui/core/List/ListItemIcon';\n// import ListItemText from '@material-ui/core/List/ListItemText';\nimport Icon from './icon';\nimport Grid from '@material-ui/core/Grid';\n// import Tooltip from '@material-ui/core/Tooltip';\n\nexport default class FormCardButtons extends React.PureComponent {\n  render() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      archivedAt,\n      onEdit,\n      onDelete\n    } = this.props;\n\n    // NOTE: using Tooltips below when we have 100 more items leads to a significant latency. In the\n    // future, if we wish to support tooltips then we'll probably need to lazy load the tooltip on\n    // mouse over.\n\n    let updateButton = null;\n    if (!forbidUpdate) {\n      // <Tooltip title=\"Edit\">\n      updateButton = (\n        <IconButton onClick={onEdit}>\n          <Icon icon=\"Edit\" />\n        </IconButton>\n      );\n      // </Tooltip>\n    }\n\n    let deleteButton = null;\n    if (!forbidDelete) {\n      deleteButton = (\n        <IconButton onClick={onDelete}>\n          <Icon icon={archivedAt ? 'Restore' : 'Delete'} />\n        </IconButton>\n      );\n    }\n\n    if (editable && !disabled && (!forbidUpdate || !forbidDelete)) {\n      return (\n        <Grid item>\n          {updateButton}\n          {deleteButton}\n          {/* TODO: make the more menu optional\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={this.handleMoreClose}\n          >\n            <MenuItem\n              className={classes.menuItem}\n              onClick={event => this.handleEdit(event)}\n            >\n              <ListItemIcon className={classes.icon}>\n                <Icon icon=\"Edit\" />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.primary }}\n                inset\n                primary=\"Edit\"\n              />\n            </MenuItem>\n            <MenuItem\n              className={classes.menuItem}\n              onClick={event => this.handleDelete(event)}\n            >\n              <ListItemIcon className={classes.icon}>\n                <Icon icon=\"Delete\" />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.primary }}\n                inset\n                primary=\"Delete\"\n              />\n            </MenuItem>\n          </Menu>\n          */}\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport attach from './attach';\nimport FormCardButtons from './form-card-buttons';\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2)\n  },\n  content: {\n    flex: 1,\n    cursor: 'pointer'\n  }\n});\n\n// Use PureComponent so that we avoid unnecessary re-rendering\nclass FormCard extends React.PureComponent {\n  handleClick = event => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.component);\n    }\n  };\n\n  handleEdit = (event, id) => {\n    if (this.props.onEdit) {\n      this.props.onEdit(event, this.props.component);\n    }\n  };\n\n  handleDelete = event => {\n    // this.handleMoreClose();\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.component);\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      value\n    } = this.props;\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\">\n            <Grid\n              item\n              className={classes.content}\n              onClick={event => this.handleClick(event)}\n            >\n              <Component component={component} formTag={false} mode=\"read\" />\n            </Grid>\n            <FormCardButtons\n              forbidUpdate={forbidUpdate}\n              forbidDelete={forbidDelete}\n              editable={editable}\n              disabled={disabled}\n              archivedAt={value.archivedAt}\n              onEdit={event => this.handleEdit(event)}\n              onDelete={event => this.handleDelete(event)}\n            />\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nFormCard = withStyles(styles)(FormCard);\nexport default attach(['value'])(FormCard);\n","import React from 'react';\nimport Button from './button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Component from './component';\nimport attach from './attach';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nclass FormDialog extends React.PureComponent {\n  state = { saveClicked: false, previousMode: null };\n\n  handleClose = withCancelButton => {\n    // Prevent the user from losing data when pressing esc or clicking outside dialog\n    const { mode, onClose, onCancel, currentForm } = this.props;\n    if (withCancelButton || mode !== 'update') {\n      if (mode === 'update') {\n        if (onCancel) {\n          onCancel(currentForm);\n        }\n      } else {\n        if (onClose) {\n          onClose(currentForm);\n        }\n      }\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.currentForm);\n    }\n  };\n\n  handleSave = event => {\n    // Stop the form from refreshing the page\n    event.preventDefault();\n\n    // Should the submit action be disabled? For example, we may be editing in a nested dialog\n    if (!this.props.disableSubmit) {\n      if (this.props.onSave) {\n        this.props.onSave();\n      }\n\n      // Disable the save button so that the user sees that something is being processed\n      this.setState({ saveClicked: true });\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.currentForm);\n    }\n  };\n\n  isOpen() {\n    const { mode } = this.props;\n    if (mode === CollectionFieldCore.MODES.DELETE) {\n      // Don't show the dialog when restoring\n      return false;\n    } else {\n      return !!mode;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the mode or err changes then allow the user to click save\n    if (\n      this.props.mode !== prevProps.mode ||\n      this.props.err !== prevProps.err\n    ) {\n      this.setState({ saveClicked: false });\n    }\n\n    if (this.props.mode !== prevProps.mode) {\n      this.setState({ previousMode: prevProps.mode });\n    }\n  }\n\n  render() {\n    const {\n      mode,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      value,\n      fullScreen\n    } = this.props;\n\n    const { saveClicked, previousMode } = this.state;\n\n    const disableSave =\n      component.hasErrorForTouchedField() ||\n      !component.get('dirty') ||\n      saveClicked;\n\n    const open = this.isOpen();\n\n    let buttons = null;\n\n    // Note: we analyze the previousMode so that the user isn't flashed with new buttons immediately\n    // after they click save or close the dialog\n    if (\n      mode === 'update' ||\n      mode === 'create' ||\n      (mode === null &&\n        (previousMode === 'update' || previousMode === 'create'))\n    ) {\n      buttons = (\n        <div>\n          {/* We use type=submit so that the form is submitted when the user presses enter */}\n          <Button\n            type=\"submit\"\n            label=\"Save\"\n            icon=\"Save\"\n            disabled={disableSave}\n          />\n          <Button\n            label=\"Cancel\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    } else if (!forbidUpdate || !forbidDelete) {\n      buttons = (\n        <div>\n          {forbidUpdate ? (\n            ''\n          ) : (\n            <Button label=\"Edit\" icon=\"Edit\" onClick={this.handleEdit} />\n          )}\n          {forbidDelete ? (\n            ''\n          ) : (\n            <Button\n              label={value.archivedAt ? 'Restore' : 'Delete'}\n              icon={value.archivedAt ? 'Restore' : 'Delete'}\n              onClick={this.handleDelete}\n            />\n          )}\n          <Button\n            label=\"Close\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Dialog\n        // fullScreen will be true on a small screen\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => this.handleClose(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {/* We use a form element so that we can submit the form on enter */}\n        <form onSubmit={this.handleSave}>\n          <DialogContent>\n            <Component component={component} formTag={false} mode={mode} />\n          </DialogContent>\n          {buttons ? <DialogActions>{buttons}</DialogActions> : ''}\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nFormDialog = withMobileDialog()(FormDialog);\nFormDialog = attach(['err', 'dirty', 'value', 'mode', 'disableSubmit'])(\n  FormDialog\n);\nexport default FormDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialog extends React.PureComponent {\n  handleClose = yes => {\n    if (this.props.onClose) {\n      this.props.onClose(yes);\n    }\n  };\n\n  render() {\n    const { title, text, open, alert } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={() => this.handleClose(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {text}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            {alert ? null : (\n              <Button onClick={() => this.handleClose(false)} color=\"primary\">\n                No\n              </Button>\n            )}\n            <Button\n              onClick={() => this.handleClose(true)}\n              color=\"primary\"\n              autoFocus\n            >\n              {alert ? 'OK' : 'Yes'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Icon from '../icon';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    // minWidth: 120\n  },\n  flip: {\n    transform: 'scaleY(-1)'\n  }\n});\n\nclass SelectOrder extends React.PureComponent {\n  handleClick = () => {\n    const sortOrder = this.props.sortOrder === 'ASC' ? 'DESC' : 'ASC';\n    this.props.onChange({ sortOrder });\n  };\n\n  handleChange = event => {\n    this.props.onChange({ sortBy: event.target.value });\n  };\n\n  render() {\n    const { classes, sortBy, sortOrder, options } = this.props;\n\n    const flipped = sortOrder !== 'DESC';\n\n    const items = options.map(option => {\n      return (\n        <MenuItem value={option.value} key={option.value}>\n          {option.label}\n        </MenuItem>\n      );\n    });\n\n    // If we wanted the icon as an adornment:\n    // <TextField\n    //   select\n    //   InputProps={{\n    //     startAdornment:\n    //     <InputAdornment position=\"start\">\n    //       <IconButton color=\"primary\" aria-label=\"new\" onClick={this.handleOrder}>\n    //         <Icon icon=\"Sort\" className={classes.flip} />\n    //       </IconButton>\n    //     </InputAdornment>,\n    //   }}\n    // >\n    //   <MenuItem value={10}>Ten</MenuItem>\n    //   <MenuItem value={20}>Twenty</MenuItem>\n    //   <MenuItem value={30}>Thirty</MenuItem>\n    // </TextField>\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          {/*\n          <InputLabel>Sort by</InputLabel>\n          */}\n          <Select value={sortBy} onChange={this.handleChange}>\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {items}\n          </Select>\n        </FormControl>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"sort order\"\n          onClick={this.handleClick}\n        >\n          <Icon icon=\"Sort\" className={flipped ? classes.flip : null} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SelectOrder);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormCard from '../form-card';\nimport FormDialog from '../form-dialog';\nimport attach from '../attach';\nimport Button from '../button';\nimport Typography from '@material-ui/core/Typography';\nimport ConfirmationDialog from '../confirmation-dialog';\nimport access from 'mson/lib/access';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './collection-field.css';\nimport SelectOrder from './select-order';\nimport ButtonField from 'mson/lib/fields/button-field';\nimport Icon from '../icon';\nimport CommonField from './common-field';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CollectionFieldCore from 'mson/lib/fields/collection-field';\n\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: theme.spacing(0.125),\n  margin: `0 0 ${theme.spacing(0.125)}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? theme.palette.secondary[400] : undefined,\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver, theme) => ({\n  background: isDraggingOver ? theme.palette.grey[300] : undefined,\n  width: '100%'\n});\n\n// Note:\n//   - We use a dialog to view/edit the forms as we want to be able to display just a few pieces\n//     of data in the list and all the data when viewing/editing.\n\nconst styles = theme => ({\n  root: {\n    // Needed when field is nested in a form that is nested in a form, e.g. FormEditor\n    width: '100%'\n  },\n  spacer: {\n    backgroundColor: theme.palette.grey[300],\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate'\n  },\n  footer: {\n    // Create space at the footer so that it is more evident to the user that the next page has been\n    // loaded\n    height: 50,\n    backgroundColor: theme.palette.grey[300],\n    margin: theme.spacing(1),\n    animation: 'fadeIn 1s infinite alternate'\n  }\n});\n\nclass CollectionField extends React.PureComponent {\n  state = {\n    confirmationOpen: false,\n    sortBy: '',\n    sortOrder: 'ASC'\n  };\n\n  handleClose = () => {\n    this.props.component.set({ mode: null });\n  };\n\n  handleCancel = form => {\n    const { component, preventReadAction } = this.props;\n    if (component.get('skipRead') || preventReadAction) {\n      component.set({ mode: null });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ\n      });\n    }\n  };\n\n  handleClick = form => {\n    const { component } = this.props;\n    if (component.get('skipRead')) {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.UPDATE\n      });\n    } else {\n      component.set({\n        currentForm: form,\n        mode: CollectionFieldCore.MODES.READ\n      });\n    }\n  };\n\n  handleEdit = form => {\n    this.props.component.set({\n      currentForm: form,\n      mode: CollectionFieldCore.MODES.UPDATE\n    });\n  };\n\n  handleNew = () => {\n    this.props.component.set({\n      currentForm: null,\n      mode: CollectionFieldCore.MODES.CREATE\n    });\n  };\n\n  handleSave = async () => {\n    await this.props.component.save();\n  };\n\n  isOpen() {\n    return !!this.props.mode;\n  }\n\n  handleDelete = async formToDelete => {\n    const { component, preventDeleteAction } = this.props;\n\n    const open = this.isOpen();\n    if (formToDelete) {\n      component.set({\n        currentForm: formToDelete,\n        mode: CollectionFieldCore.MODES.DELETE\n      });\n    } else {\n      // Are we already focussed on this form\n      formToDelete = component.get('form');\n    }\n\n    const archivedAt = formToDelete.getValue('archivedAt');\n\n    // Are we restoring?\n    if (archivedAt) {\n      await component.restore(formToDelete);\n\n      // Is the dialog open?\n      if (open) {\n        // Close it\n        component.set({ mode: null });\n      }\n    } else {\n      if (!preventDeleteAction) {\n        this.setState({\n          confirmationOpen: true,\n          // confirmationTitle: `Are you sure you want to delete this ${singularLabel}?`\n          confirmationTitle: 'Delete this?'\n        });\n      }\n      component.set({ mode: null });\n    }\n  };\n\n  handleConfirmationClose = async yes => {\n    if (yes) {\n      const { component } = this.props;\n      await component.archive(component.get('form'));\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canCreate() {\n    return access.canCreate(this.props.component.get('form'));\n  }\n\n  canUpdate() {\n    return access.canUpdate(this.props.component.get('form'));\n  }\n\n  canArchive() {\n    return access.canArchive(this.props.component.get('form'));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.bufferTopId !== prevProps.bufferTopId) {\n      // Resize the spacer now that the newly prepended items have been rendered\n      this.props.component._infiniteLoader.resizeSpacer(this.props.bufferTopId);\n    }\n\n    if (this.props.spacerHeight !== prevProps.spacerHeight) {\n      this.props.component._infiniteLoader.setSpacerResizing(false);\n    }\n\n    if (this.props.change !== prevProps.change) {\n      this.props.component.set({ isLoading: false });\n    }\n  }\n\n  canDrag() {\n    const { forbidOrder, showArchived, searchString, order } = this.props;\n\n    // Can we order by dragging?\n    return !forbidOrder && !showArchived && !searchString && !order;\n  }\n\n  cards(canUpdate, canArchive) {\n    const {\n      component,\n      forbidUpdate,\n      forbidDelete,\n      forbidOrder,\n      editable,\n      disabled,\n      useDisplayValue,\n      theme\n    } = this.props;\n\n    // Force to 1 colum when ordering allowed\n    const maxColumns = forbidOrder === false ? 1 : this.props.maxColumns;\n\n    const maxGrids = 12 / maxColumns;\n\n    let cards = [];\n\n    let index = 0;\n    for (const form of component.getForms()) {\n      // TODO: Rendering should not change form. Use utils.getIfDefined() in form to allow passing\n      // in of editable via React layer\n      form.setEditable(false);\n\n      // We need to use the id for the key as we use the same list of cards when toggling\n      // showArchive\n      const key = form.getUniqueId();\n\n      // Note: we use an id instead of ref so that more of our logic can be reused across different\n      // frameworks. We use the form id so that we have a consistent way of referencing the element\n      // for things like infinite loading.\n      const id = component.getUniqueItemId(form.getValue('id'));\n\n      const item = (\n        <Grid item xs={12} sm={maxGrids} lg={maxGrids} key={key} id={id}>\n          <FormCard\n            onClick={() => this.handleClick(form)}\n            onEdit={() => this.handleEdit(form)}\n            onDelete={this.handleDelete}\n            component={form}\n            forbidUpdate={forbidUpdate || !canUpdate || useDisplayValue}\n            forbidDelete={forbidDelete || !canArchive || useDisplayValue}\n            editable={editable}\n            disabled={disabled}\n          />\n        </Grid>\n      );\n\n      if (this.canDrag()) {\n        cards.push(\n          <Draggable key={id} draggableId={id} index={index++}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  theme\n                )}\n              >\n                {item}\n              </div>\n            )}\n          </Draggable>\n        );\n      } else {\n        cards.push(item);\n      }\n    }\n\n    return cards;\n  }\n\n  handleOrdering = props => {\n    // TODO: shouldn't the ordering just be in the field and not have to be in this state?\n    this.setState(props, () => {\n      this.props.component.set({\n        order: this.state.sortBy\n          ? [[this.state.sortBy, this.state.sortOrder]]\n          : null\n      });\n    });\n  };\n\n  sortOptions() {\n    const { component } = this.props;\n    if (component && component.get('form')) {\n      const form = component.get('form');\n      const fieldsCanAccess = access.fieldsCanAccess('read', form);\n      const fields = [];\n      form.eachField(field => {\n        const name = field.get('name');\n\n        // Do we have access to the field? Allowed to sort? Not hidden? Not a button?\n        if (\n          fieldsCanAccess[name] !== undefined &&\n          !field.get('forbidSort') &&\n          !field.get('hidden') &&\n          !(field instanceof ButtonField)\n        ) {\n          fields.push({\n            value: (form.isDefaultField(name) ? '' : 'fieldValues.') + name,\n            label: field.get('label')\n          });\n        }\n      });\n      return fields;\n    }\n  }\n\n  header(numCards) {\n    const {\n      forbidCreate,\n      editable,\n      disabled,\n      component,\n      forbidSort,\n      store,\n      useDisplayValue\n    } = this.props;\n\n    const { sortBy, sortOrder } = this.state;\n\n    const singularLabel = component.getSingularLabel();\n\n    const reachedMax = component.reachedMax();\n\n    const canCreate = this.canCreate();\n\n    const showNewButton =\n      editable &&\n      !disabled &&\n      !useDisplayValue &&\n      !forbidCreate &&\n      !reachedMax &&\n      canCreate;\n\n    const canOrder = !forbidSort;\n\n    const sortOptions = this.sortOptions();\n\n    // Sorting only works when there is a backing store\n    const hasStore = !!store;\n    const showOrder = numCards > 0 && hasStore;\n\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={6} lg={6}>\n          {showNewButton ? (\n            <Button\n              aria-label=\"new\"\n              onClick={this.handleNew}\n              icon=\"Add\"\n              label={'New ' + singularLabel}\n              marginTop={false}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6} align=\"right\">\n          {showOrder && canOrder ? (\n            <SelectOrder\n              onChange={this.handleOrdering}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              options={sortOptions}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index !== result.source.index) {\n      this.props.component.moveAndSaveForm({\n        sourceIndex: result.source.index,\n        destinationIndex: result.destination.index\n      });\n    }\n  };\n\n  // TODO: how to prevent re-rendering of all form-cards when dialog open state is changed? Or, does\n  // it not really matter as we are using PureComponents?\n  field() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      component,\n      spacerHeight,\n      classes,\n      isLoading,\n      form,\n      currentForm,\n      noResults,\n      disabled,\n      accessEditable,\n      useDisplayValue,\n      theme,\n      preventUpdate,\n      preventDeleteAction\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    const { confirmationOpen, confirmationTitle } = this.state;\n\n    const label = component.get('label').toLowerCase();\n\n    const canUpdate = this.canUpdate();\n    const canArchive = this.canArchive();\n\n    const spacerStyle = { height: spacerHeight };\n\n    const spacerId = component.get('spacerId');\n\n    let cards = this.cards(canUpdate, canArchive);\n\n    let cardContainer = cards;\n\n    if (this.canDrag()) {\n      cardContainer = (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver, theme)}\n              >\n                {cards}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      );\n    }\n\n    const searchString = component.get('searchString');\n\n    // Is the user searching and there are no records?\n    const showNoRecords = searchString && noResults;\n\n    const header = this.header(cards.length);\n\n    return (\n      <div>\n        {header}\n\n        {showNoRecords ? (\n          <Typography variant=\"h4\">\n            <Icon icon=\"Info\" /> No {label} found\n          </Typography>\n        ) : null}\n\n        <div id={spacerId} className={classes.spacer} style={spacerStyle} />\n\n        <Grid container spacing={0}>\n          {cardContainer}\n        </Grid>\n\n        {isLoading ? <div className={classes.footer} /> : null}\n\n        {/* TODO: would it be better to have a single, global FormDialog instance? Or, is it better\n        to have multiple instances so that you can have different memory spaces. Currenly we have a\n        hybrid where we have a dialog per form. There is almost certainly more overhead in having an\n        instance per record, right? */}\n        <FormDialog\n          component={form}\n          currentForm={currentForm}\n          onClose={this.handleClose}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n          forbidUpdate={\n            forbidUpdate ||\n            !canUpdate ||\n            dis ||\n            useDisplayValue ||\n            preventUpdate\n          }\n          forbidDelete={\n            forbidDelete ||\n            !canArchive ||\n            dis ||\n            useDisplayValue ||\n            preventDeleteAction\n          }\n        />\n\n        <ConfirmationDialog\n          open={confirmationOpen}\n          onClose={this.handleConfirmationClose}\n          title={confirmationTitle}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { component, hideLabel, classes } = this.props;\n\n    const isBlank = component.isBlank();\n\n    return (\n      <span className={classes.root}>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n          />\n        )}\n        {this.field()}\n      </span>\n    );\n  }\n}\n\nCollectionField = withStyles(styles, { withTheme: true })(CollectionField);\nCollectionField = attach([\n  'change',\n  'label',\n  'singularLabel',\n  'forbidCreate',\n  'forbidUpdate',\n  'forbidDelete',\n  'forbidSort',\n  'forbidOrder',\n  'editable',\n  'disabled',\n  'spacerHeight',\n  'bufferTopId',\n  'isLoading',\n  'form',\n  'currentForm',\n  'mode',\n  'noResults',\n  'store',\n  'maxColumns',\n  'useDisplayValue',\n  'hideLabel',\n  'showArchived',\n  'searchString',\n  'order',\n  'preventReadAction',\n  'preventUpdate',\n  'preventDeleteAction'\n])(CollectionField);\nexport default CollectionField;\n","import React from 'react';\nimport Field from './field';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '../icon';\nimport FlexBreak from '../flex-break';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\n\nclass ListItemField extends React.PureComponent {\n  handleDelete = () => {\n    this.props.component.emit('delete');\n  };\n\n  render() {\n    // Note: allowDelete and help have to be passed in as a prop as it is really the parent's values\n    // that we need\n    const { component, allowDelete, help, disabled, editable } = this.props;\n\n    if (component) {\n      const block = component.get('block');\n      return (\n        <span>\n          <Field component={component} block={false} disabled={disabled} />\n          {allowDelete && !disabled && editable ? (\n            <IconButton aria-label=\"Delete\" onClick={this.handleDelete}>\n              <Icon icon=\"DeleteIcon\" />\n            </IconButton>\n          ) : null}\n          {help && editable ? <HelpToolTip help={help} /> : ''}\n          {block ? <FlexBreak /> : null}\n        </span>\n      );\n    } else {\n      // component can be falsy if it was just deleteed\n      return null;\n    }\n  }\n}\n\n// We want the component to update when the value changes as blank fields should not display a\n// delete button\nexport default attach(['value', 'disabled', 'editable'])(ListItemField);\n","import React from 'react';\nimport ListItemField from './list-item-field';\nimport attach from '../attach';\nimport Button from '../button';\nimport CommonField from './common-field';\n\nclass ListField extends React.PureComponent {\n  handleNew = () => {\n    this.props.component.createField();\n\n    // Reset the touched state so that errors aren't reported immediately when the user hasn't\n    // finished entering the new value.\n    this.props.component.set({ touched: false });\n  };\n\n  render() {\n    const {\n      component,\n      allowDelete,\n      useDisplayValue,\n      autoCreateFields,\n      hideLabel,\n      editable,\n      canDeleteEmpty,\n      accessEditable,\n      disabled,\n      hideDeleteButton\n    } = this.props;\n\n    const singularLabel = component.getSingularLabel();\n\n    const dis = accessEditable === false || disabled;\n\n    let fields = [];\n    let first = true;\n\n    const isBlank = component.isBlank();\n\n    component.eachField((field, index) => {\n      const fieldIsBlank = field.isBlank();\n\n      // When using the display value, we hide any blank fields, e.g. the empty \"next\" fields\n      if (first || !useDisplayValue || !fieldIsBlank) {\n        // We have to pass allowDelete as it is the allowDelete of the parent\n        fields.push(\n          <ListItemField\n            component={field}\n            key={index}\n            allowDelete={\n              allowDelete &&\n              !useDisplayValue &&\n              (canDeleteEmpty || !fieldIsBlank) &&\n              !hideDeleteButton\n            }\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (!autoCreateFields && !useDisplayValue && editable && !dis) {\n      fields.push(\n        <Button\n          key=\"button\"\n          aria-label=\"add\"\n          onClick={this.handleNew}\n          icon=\"Add\"\n          label={'Add ' + (singularLabel ? singularLabel : '')}\n          marginTop={false}\n        />\n      );\n    }\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            marginBottom={false}\n            shrinkLabel={!isBlank}\n          />\n        )}\n        <div>{fields}</div>\n      </span>\n    );\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach([\n  'change',\n  'help',\n  'allowDelete',\n  'useDisplayValue',\n  'autoCreateFields',\n  'hideLabel',\n  'value',\n  'editable',\n  'canDeleteEmpty',\n  'disabled',\n  'hideDeleteButton',\n  'singularLabel',\n  'label'\n])(ListField);\n","import React from 'react';\nimport attach from '../attach';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport globals from 'mson/lib/globals';\n\nconst styles = theme => ({\n  captcha: {\n    margin: theme.spacing(1)\n  }\n});\n\nclass ReCAPTCHAField extends React.PureComponent {\n  handleChange = value => {\n    this.props.component.setValue(value);\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      accessEditable,\n      classes,\n      useDisplayValue\n    } = this.props;\n\n    const isEditable = accessEditable !== false && editable && !disabled;\n\n    const siteKey = globals.get('reCAPTCHASiteKey');\n\n    if (isEditable && !useDisplayValue) {\n      return (\n        <div className={classes.captcha}>\n          <ReCAPTCHA\n            ref=\"recaptcha\"\n            sitekey={siteKey}\n            onChange={this.handleChange}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nReCAPTCHAField = withStyles(styles)(ReCAPTCHAField);\n\nexport default attach(['disabled', 'editable', 'useDisplayValue'])(\n  ReCAPTCHAField\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '../icon';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  input: {\n    display: 'flex',\n    padding: 0,\n    minWidth: 240, // A good default for most labels\n    height: 'auto'\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n\n    // Adjust for MUI label\n    marginTop: theme.spacing(2) + 5\n  },\n  chip: {\n    margin: `${theme.spacing(1)}px ${theme.spacing(0.25)}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`\n  },\n  singleValue: {\n    fontSize: theme.typography.subtitle1.fontSize\n  },\n  // placeholder: {\n  //   position: 'absolute',\n  //   left: 2,\n  //   fontSize: theme.typography.subtitle1.fontSize\n  // },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n\n    // Adjust for MUI label\n    // marginTop: theme.spacing.unit * 7\n    marginTop: theme.spacing(1)\n  },\n  root: {\n    // Allow for help icon to be placed on right of field\n    display: 'inline-flex'\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  disabled: {\n    color: theme.palette.text.secondary\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  const optionalProps = {};\n  if (props.selectProps.fullWidth) {\n    optionalProps.fullWidth = true;\n  }\n  return (\n    <TextField\n      {...optionalProps}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\n// Note: kept in case we want to implement the placeholder in the future\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={classNames(\n        props.selectProps.classes.singleValue,\n        props.selectProps.isDisabled ? props.selectProps.classes.disabled : null\n      )}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n        [props.selectProps.classes.disabled]: props.selectProps.isDisabled\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<Icon icon=\"Cancel\" />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  // Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass AutoCompleteSelect extends React.Component {\n  render() {\n    const {\n      classes,\n      options,\n      isClearable,\n      placeholder,\n      onChange,\n      onBlur,\n      onFocus,\n      onInputChange,\n      value,\n      isDisabled,\n      fullWidth,\n      isMulti\n    } = this.props;\n\n    const selectStyles = {\n      dropdownIndicator: base => ({\n        ...base,\n        cursor: 'pointer'\n      }),\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer'\n      }),\n\n      // Needed so that the menu appears above any dialog windows\n      menuPortal: base => ({\n        ...base,\n        zIndex: 2000\n      })\n    };\n\n    return (\n      <Select\n        className={classNames(classes.root, fullWidth && classes.fullWidth)}\n        classes={classes}\n        styles={selectStyles}\n        options={options}\n        components={components}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onInputChange={onInputChange}\n        placeholder={placeholder}\n        isClearable={isClearable}\n        isDisabled={isDisabled}\n        fullWidth={fullWidth}\n        isMulti={isMulti}\n        // Needed so that the menu is not clipped by the app's root level overflow:hidden or when it\n        // appears in a dialog window\n        menuPortalTarget={document.body}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(AutoCompleteSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport Chip from '@material-ui/core/Chip';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\nimport AutoCompleteSelect from './autocomplete-select';\n\nconst styles = theme => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    minWidth: 120\n  },\n  chip: {\n    margin: theme.spacing(0.25)\n  }\n});\n\nclass SelectField extends React.PureComponent {\n  state = {\n    focus: false\n  };\n\n  handleChange(value) {\n    this.props.component.setValue(value);\n  }\n\n  handleAutocompleteChange(value) {\n    const { multiple } = this.props;\n    if (multiple) {\n      this.handleChange(value.map(val => val.value));\n    } else {\n      this.handleChange(value && (value.value ? value.value : null));\n    }\n  }\n\n  handleFocus() {\n    this.setState({ focus: true });\n  }\n\n  handleBlur() {\n    this.setState({ focus: false });\n    this.props.component.setTouched(true);\n  }\n\n  renderOptions() {\n    const { options, blankString, value, multiple } = this.props;\n\n    if (options) {\n      let opts = [];\n\n      if (!multiple && blankString) {\n        // Note: the blankString doesn't make sense when we allow multiple selections\n        opts.push(\n          <MenuItem value=\"\" key=\"\">\n            <em>{blankString}</em>\n          </MenuItem>\n        );\n      }\n\n      options.forEach(option => {\n        if (multiple) {\n          const checked = value ? value.indexOf(option.value) !== -1 : false;\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              <Checkbox checked={checked} />\n              <ListItemText primary={option.label} />\n            </MenuItem>\n          );\n        } else {\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              {option.label}\n            </MenuItem>\n          );\n        }\n      });\n\n      return opts;\n    }\n  }\n\n  render() {\n    const {\n      value,\n      err,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      classes,\n      editable,\n      multiple,\n      accessEditable,\n      useDisplayValue,\n      options,\n      autocomplete\n    } = this.props;\n\n    const { focus } = this.state;\n\n    const dis = accessEditable === false || disabled;\n\n    let fieldValue = multiple ? [] : '';\n    if (value) {\n      fieldValue = value;\n    }\n\n    let input = undefined;\n    let renderValue = undefined;\n    if (multiple) {\n      input = <Input />;\n\n      renderValue = selected => (\n        <div className={classes.chips}>\n          {selected.map(value => (\n            <Chip\n              key={value}\n              label={component.getOptionLabel(value)}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    const optionalProps = {};\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      if (autocomplete) {\n        let autocompleteValue = null;\n\n        if (multiple) {\n          autocompleteValue = fieldValue.map(value => ({\n            value: value,\n            label: component.getOptionLabel(value)\n          }));\n        } else {\n          autocompleteValue = {\n            value: fieldValue,\n            label: component.getOptionLabel(fieldValue)\n          };\n        }\n\n        // Shrink the label?\n        if (focus || !component.isValueBlank(fieldValue)) {\n          optionalProps.shrinkLabel = true;\n        }\n\n        fld = (\n          <AutoCompleteSelect\n            options={options}\n            isClearable={true}\n            placeholder=\"\"\n            onChange={value => this.handleAutocompleteChange(value)}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n            value={autocompleteValue}\n            isDisabled={dis}\n            fullWidth={fullWidth}\n            isMulti={multiple}\n          />\n        );\n      } else {\n        fld = (\n          <Select\n            multiple={multiple}\n            error={touched && err ? true : false}\n            onChange={event => this.handleChange(event.target.value)}\n            onBlur={() => this.handleBlur()}\n            input={input}\n            renderValue={renderValue}\n            value={fieldValue}\n            disabled={dis}\n            fullWidth={fullWidth}\n            className={classes.formControl}\n          >\n            {this.renderOptions()}\n          </Select>\n        );\n      }\n    } else {\n      let displayValue = null;\n      if (multiple && value) {\n        displayValue = value.map(val => (\n          <Chip\n            key={val}\n            label={component.getOptionLabel(val)}\n            className={classes.chip}\n          />\n        ));\n      } else {\n        displayValue = component.getDisplayValue();\n      }\n      fld = <DisplayValueTypography>{displayValue}</DisplayValueTypography>;\n    }\n\n    return (\n      <CommonField component={component} {...optionalProps}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nSelectField = withStyles(styles)(SelectField);\n\nexport default attach([\n  'value',\n  'err',\n  'options',\n  'touched',\n  'blankString',\n  'disabled',\n  'fullWidth',\n  'editable',\n  'multiple',\n  'useDisplayValue',\n  'autocomplete'\n])(SelectField);\n","import React from 'react';\nimport attach from './attach';\nimport AppBar from '@material-ui/core/AppBar';\nimport TabsMui from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Icon from './icon';\n\nclass Tabs extends React.Component {\n  handleChange = (event, value) => {\n    const { component, items } = this.props;\n    component.set({ value });\n\n    const itemName = items[value].name;\n    component.emitChange(itemName);\n  };\n\n  render() {\n    const { items, value } = this.props;\n\n    // FUTURE: option to make this fixed under the main app bar?\n    return (\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={1} // tone down the elevation>\n      >\n        <TabsMui\n          value={value}\n          onChange={this.handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"auto\"\n          variant=\"fullWidth\"\n        >\n          {items.map((item, index) => (\n            <Tab\n              label={item.label}\n              icon={<Icon icon={item.icon} />}\n              key={index}\n            />\n          ))}\n        </TabsMui>\n      </AppBar>\n    );\n  }\n}\n\nTabs = attach(['items', 'value'])(Tabs);\n\nexport default Tabs;\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = theme => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass TimeField extends React.PureComponent {\n  handleDateChange = date => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      editable,\n      useDisplayValue,\n      showSeconds,\n      fullWidth,\n      disabled,\n      accessEditable\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <TimePicker\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              seconds={showSeconds}\n              // The minDate and maxDate are not used as they are confusing. They impose a\n              // restriction on the actual day, which doesn't make sense as the time is store as a\n              // timestamp with today's date and therefore the days may not match. Moreover, the\n              // picker doesn't change when these dates are specified so we can just handle the\n              // validation at the MSON-core layer. TODO: we can implement these ranges in the\n              // MSON-core layer by constructing dates with the current day and specified time from\n              // minDate and maxDate.\n              // minDate={minDate}\n              // maxDate={maxDate}\n\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              invalidDateMessage=\"\" // Let CommonField display the error\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nTimeField = withStyles(styles)(TimeField);\n\nexport default attach([\n  'value',\n  'editable',\n  'useDisplayValue',\n  'showSeconds',\n  'fullWidth',\n  'disabled'\n])(TimeField);\n","import React from 'react';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport ReactMarkdown from 'react-markdown';\n\nclass Text extends React.PureComponent {\n  render() {\n    const { text } = this.props;\n\n    // We use component=div to force usage of a div, instead of a p, as properly formatted HTML\n    // cannot nest tags like h1 under a <p>.\n    return (\n      <Typography component=\"div\">\n        <ReactMarkdown source={text} />\n      </Typography>\n    );\n  }\n}\n\nText = attach(['text'])(Text);\nexport default Text;\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport DisplayValueTypography from './display-value-typography';\nimport MaskedInput from 'react-text-mask';\n\nclass TextField extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Create a custom TextMask component. This is done once in the constructor so that it is not\n    // done in each call to render()\n    this.TextMaskCustom = props => {\n      const { inputRef, ...other } = props;\n      const { mask } = this.props;\n\n      return (\n        <MaskedInput\n          {...other}\n          ref={ref => {\n            inputRef(ref ? ref.inputElement : null);\n          }}\n          mask={mask}\n        />\n      );\n    };\n  }\n\n  handleChange = event => {\n    const { component } = this.props;\n    const value = component.fromUIValue(event.target.value);\n    component.setValue(value);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  handleKeyUp = event => {\n    // If the user presses enter on the field then mark as touched. This is necessary for when the\n    // user is using the keyboard to enter data and there is an error on the last field that needs\n    // to be reported when the user presses enter.\n    if (event.keyCode === 13) {\n      this.props.component.setTouched(true);\n    }\n  };\n\n  render() {\n    const {\n      err,\n      maxLength,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      type,\n      editable,\n      accessEditable,\n      multiline,\n      rows,\n      rowsMax,\n      useDisplayValue,\n      mask,\n      displayValue\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      const optional = {};\n      if (mask) {\n        optional.inputComponent = this.TextMaskCustom;\n      }\n      const uiValue = component.getUIValue();\n\n      fld = (\n        <Input\n          id={component.getUniqueId()}\n          error={touched && err ? true : false}\n          inputProps={{\n            maxLength: maxLength\n          }}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyUp={this.handleKeyUp}\n          value={uiValue ? uiValue : ''}\n          disabled={dis}\n          fullWidth={fullWidth}\n          type={type}\n          multiline={multiline}\n          rows={rows}\n          rowsMax={rowsMax}\n          {...optional}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {displayValue ? displayValue : component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return <CommonField component={component}>{fld}</CommonField>;\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'maxLength',\n  'touched',\n  'disabled',\n  'fullWidth',\n  'type',\n  'editable',\n  'multiline',\n  'rows',\n  'rowsMax',\n  'useDisplayValue',\n  'mask',\n  'unmask'\n])(TextField);\n","import React from 'react';\nimport TextField from './text-field';\nimport attach from '../attach';\n\nclass URLField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      value,\n      editable,\n      useDisplayValue,\n      newWindow\n    } = this.props;\n\n    let displayValue = null;\n\n    // Note: editable & useDisplayValue are checked to avoid unnecessary rendering\n    if ((!editable || useDisplayValue) && value) {\n      let href = value;\n      if (href.indexOf('http') !== 0) {\n        href = 'http://' + href;\n      }\n      displayValue = (\n        <a href={href} target={newWindow ? '_blank' : '_self'}>\n          {value}\n        </a>\n      );\n    }\n\n    return <TextField component={component} displayValue={displayValue} />;\n  }\n}\n\nexport default attach(['value', 'editable', 'useDisplayValue', 'newWindow'])(\n  URLField\n);\n","// NOTE: this file should only contain the component registrations\n\nimport ButtonField from './fields/button-field';\nimport BooleanField from './fields/boolean-field';\nimport Card from './card';\nimport ComponentField from './fields/component-field';\nimport CompositeField from './fields/composite-field';\nimport DateField from './fields/date-field';\nimport Field from './fields/field';\nimport Form from './form';\nimport FormField from './fields/form-field';\nimport Grid from './grid';\nimport GridItem from './grid-item';\nimport CollectionField from './fields/collection-field';\nimport ListField from './fields/list-field';\nimport ReCAPTCHAField from './fields/re-captcha-field';\nimport SelectField from './fields/select-field';\nimport Tabs from './tabs';\nimport TimeField from './fields/time-field';\nimport Text from './text';\nimport TextField from './fields/text-field';\nimport URLField from './fields/url-field';\n\nexport default {\n  ButtonField,\n  BooleanField,\n  Card,\n  ChainedSelectField: CompositeField,\n  ChainedSelectListField: ListField,\n  ComponentField,\n  CompositeField,\n  DateField,\n  Field,\n  Form,\n  FormField,\n  Grid,\n  GridItem,\n  CollectionField,\n  IdField: TextField,\n  IntegerField: TextField,\n  ListField,\n  MoneyField: TextField,\n  NumberField: TextField,\n  PhoneField: TextField,\n  ReCAPTCHAField,\n  SelectField,\n  SelectListField: ListField,\n  Tabs,\n  TimeField,\n  Text,\n  TextField,\n  TextListField: ListField,\n  URLField,\n  User: Form\n};\n","import components from './components';\nimport compiler from 'mson/lib/compiler';\n\nclass Utils {\n  getUIComponent(component) {\n    const name = component.getClassName();\n    const Component = components[name];\n    if (Component !== undefined) {\n      return Component;\n    } else if (compiler.isCompiled(compiler.getComponent(name))) {\n      const Parent = Object.getPrototypeOf(component.constructor);\n      return this.getUIComponent(new Parent());\n    } else {\n      // The React component wasn't found so check the MSON layer to see if we can automatically\n      // determine the component from any MSON.\n      const ancestorName = compiler.getOldestCompiledAncestor(name);\n      const Ancestor = compiler.getComponent(ancestorName);\n      return this.getUIComponent(new Ancestor());\n    }\n  }\n}\n\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from './component-utils';\n\nexport default class InnerComponent extends React.PureComponent {\n  handleChange = (name, value) => {\n    const { on, component } = this.props;\n\n    // Generic handler\n    if (on) {\n      on({ name, value, component });\n    }\n\n    // Handler for specific event\n    const handlerName = 'on' + name.charAt(0).toUpperCase() + name.slice(1);\n    if (this.props[handlerName]) {\n      this.props[handlerName]({ value, component });\n    }\n  };\n\n  addChangeListener() {\n    this.props.component.on('$change', this.handleChange);\n\n    // Emit a mount event so that the component can load any initial data, etc... We emit this event\n    // here and not in componentDidMount() as the component may actually be set after\n    // componentDidMount() was run.\n    this.props.component.emitChange('mount');\n  }\n\n  removeChangeListener() {\n    this.props.component.removeListener('$change', this.handleChange);\n  }\n\n  componentDidMount() {\n    if (this.props.component) {\n      this.addChangeListener();\n    }\n  }\n\n  componentWillUnmount() {\n    // Emit a unmount event so that we can perform any needed clean up\n    this.props.component.emitChange('unmount');\n\n    this.removeChangeListener();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the component changing?\n    if (this.props.component !== prevProps.component) {\n      // Recreate the listener\n      this.removeChangeListener();\n      this.addChangeListener();\n    }\n  }\n\n  render() {\n    const { component, ...others } = this.props;\n\n    if (component) {\n      const Component = componentUtils.getUIComponent(component);\n      return <Component component={component} {...others} />;\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport InnerComponent from './inner-component';\nimport compiler from 'mson/lib/compiler';\nimport attach from './attach';\n\nexport class Component extends React.PureComponent {\n  state = { component: null };\n\n  createComponent() {\n    const { definition } = this.props;\n    this.setState({ component: compiler.newComponent(definition) });\n  }\n\n  componentDidMount() {\n    if (this.props.definition) {\n      this.createComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    const { component } = this.state;\n\n    // Did we use a definition to define a component in the state?\n    if (component) {\n      // Fire the unmount before we destroy the component so that the event is not lost\n      component.emitChange('unmount');\n\n      // Remove all listeners to prevent listener leaks\n      this.state.component.destroy();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the definition changing?\n    if (this.props.definition !== prevProps.definition) {\n      this.createComponent();\n    }\n  }\n\n  render() {\n    const { definition, component, ...childProps } = this.props;\n    let comp = component;\n\n    // Should we use the component generated from the definition?\n    if (!component) {\n      comp = this.state.component;\n    }\n\n    // Note: the component can be falsy, e.g. it has not yet been defined\n    if (comp && comp.get('hidden')) {\n      return null;\n    } else {\n      return <InnerComponent component={comp} {...childProps} />;\n    }\n  }\n}\n\nexport default attach(['hidden'])(Component);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// import Button from '@material-ui/core/Button';\nimport SnackbarMUI from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n});\n\nclass Snackbar extends React.PureComponent {\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { classes, message, open } = this.props;\n    return (\n      <SnackbarMUI\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{message}</span>}\n        action={[\n          // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n          //   UNDO\n          // </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>\n        ]}\n      />\n    );\n  }\n}\n\nSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Snackbar);\n","// TODO:\n//   - On mobile when using search bar, display title and search icon. When user clicks icon then\n//     hides title and allows for search string to be entered.\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Menu from './menu';\nimport SearchBar from './search-bar';\nimport { Switch, Route } from 'react-router-dom';\nimport Component from './component';\n// import compiler from 'mson/lib/compiler';\nimport { withRouter } from 'react-router';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport attach from './attach';\nimport globals from 'mson/lib/globals';\nimport Snackbar from './snackbar';\nimport ConfirmationDialog from './confirmation-dialog';\nimport MUISwitch from '@material-ui/core/Switch';\n// import UserMenu from './user-menu';\nimport Action from 'mson/lib/actions/action';\nimport CollectionField from 'mson/lib/fields/collection-field';\nimport Form from 'mson/lib/form';\nimport access from 'mson/lib/access';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    // height: 430,\n    // marginTop: theme.spacing.unit * 3,\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    position: 'fixed',\n    marginLeft: drawerWidth\n  },\n  appBarResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    padding: theme.spacing(3),\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64\n    },\n\n    // Disable Chrome's Scroll Anchoring as it causes problems with inifinite scrolling when\n    // scrolling up. Specifically, the scroll location is locked after items are prepended to the\n    // top of the list before the spacer is resized.\n    overflowAnchor: 'none'\n  },\n  contentResponsive: {\n    // Also needed to extend menu vertically\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth\n    }\n  },\n  alignRight: {\n    marginLeft: 'auto' // right align\n  }\n});\n\n// TODO: break up into components for header, menu, body, etc...\nclass App extends React.PureComponent {\n  state = {\n    mobileOpen: false,\n    menuItem: null,\n    snackbarOpen: false,\n    snackbarMessage: '',\n    confirmationOpen: false,\n    nextMenuItem: null,\n    showArchivedToggle: false,\n\n    // Note: we need both searchStringInput and globals.searchString as searchStringInput is the\n    // controlled value for the text input and globals.searchString is the actual string with which\n    // we are searching. These values not the same as we expect the user to submit the search before\n    // it is performed so that we don't search on every keystroke. FUTURE: wait a little bit after\n    // characters have been entered and then automatically search.\n    searchStringInput: '',\n    showSearch: false,\n\n    showSearchOnMobile: false\n\n    // isLoggedIn: false\n  };\n\n  form = null;\n\n  path = null;\n\n  constructor(props) {\n    super(props);\n    this.setGlobalOnNavigate();\n  }\n\n  onNavigate = callback => {\n    // We don't warn about discarding changes when fullScreen, e.g. a login page\n    const menuItem = this.state.menuItem;\n    if (\n      menuItem &&\n      menuItem.content.has('dirty') &&\n      menuItem.content.get('dirty') &&\n      !menuItem.fullScreen\n    ) {\n      // Show a confirmation dialog to see if the user wants to continue\n      globals.displayConfirmation({\n        title: 'Discard changes?',\n        callback\n      });\n    } else {\n      // Nothing is dirty so allow the navigation to continue\n      callback(true);\n    }\n  };\n\n  setGlobalOnNavigate() {\n    globals.setOnNavigate(this.onNavigate);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  redirect(path) {\n    const { history } = this.props;\n\n    // Clear the redirectPath so that back-to-back redirects to the same route are considered\n    // unique, e.g. if / routes to /somepage and then the user hits back.\n    globals.set({ redirectPath: null });\n\n    history.push(path);\n  }\n\n  navigateTo(path) {\n    const { menuItem } = this.state;\n    const { component } = this.props;\n    const menu = component.get('menu');\n\n    // if (path === '/home') {\n    //   // Redirect so that user sees the actual path and not /home\n    //   history.push(menu.getFirstItem().path);\n    // } else\n    if (!menuItem || path !== menuItem.path) {\n      // if (this.requireAccess(menu.get('roles'))) {\n      // The route is changing\n      const item = menu.getItemAndParsePath(path);\n      return this.switchContent(item.item, item.params);\n      // }\n    }\n  }\n\n  handleNavigate = async (menuItem, force) => {\n    // Is the next item just an action?\n    if (menuItem.content instanceof Action) {\n      // Execute the actions\n      await menuItem.content.run();\n    } else {\n      this.props.history.push(menuItem.path);\n    }\n  };\n\n  handleConfirmationClose = async yes => {\n    const { confirmation } = this.props;\n    if (confirmation.callback && yes) {\n      // Allow/prohibit the route change\n      confirmation.callback(yes);\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canArchive() {\n    let canArchive = false;\n    let canSearch = false;\n    if (this.component && this.component instanceof Form) {\n      for (const field of this.component.getFields()) {\n        if (field instanceof CollectionField) {\n          canArchive =\n            !field.get('forbidViewArchived') &&\n            access.canArchive(field.get('form'));\n          canSearch = !field.get('forbidSearch');\n        }\n      }\n    }\n    return {\n      canArchive,\n      canSearch\n    };\n  }\n\n  emitLoggedOut() {\n    globals.set({ redirectAfterLogin: this.props.location.pathname });\n    this.props.component.emitLoggedOut();\n  }\n\n  requireAccess(roles) {\n    const canAccess =\n      !roles || (registrar.client && registrar.client.user.hasRole(roles));\n    if (!canAccess) {\n      this.emitLoggedOut();\n    }\n    return canAccess;\n  }\n\n  switchContent = async (menuItem, parameters) => {\n    // Prevent inifinite recursion when menuItem is null by making sure that the menuItem is\n    // changing before changing anything, especially the state\n    if (menuItem !== this.state.menuItem) {\n      if (this.component) {\n        // Emit an unload event so that the component can unload any data, etc...\n        this.component.emitUnload();\n      }\n\n      // Note: menuItem can be null if there is no content on the landing page\n      const isAction = menuItem && menuItem.content instanceof Action;\n\n      // Note: menuItem.content can be an action if the user goes directly to a route where the\n      // content is an action\n      if (menuItem && menuItem.content) {\n        const { location, component } = this.props;\n        const menu = component.get('menu');\n        globals.set({\n          route: menu.toRoute({\n            parameters,\n            queryString: location.search.substr(1),\n            hash: location.hash.substr(1)\n          })\n        });\n\n        const parentItem = menu.getParent(menuItem.path);\n        if (\n          this.requireAccess(menuItem.roles) &&\n          (!parentItem || this.requireAccess(parentItem.roles))\n        ) {\n          if (isAction) {\n            // Execute the actions\n            await menuItem.content.run();\n          } else {\n            // Instantiate form\n            // this.component = compiler.newComponent(menuItem.content.component);\n            this.component = menuItem.content;\n\n            // Emit a load event so that the component can load any initial data, etc...\n            this.component.emitLoad();\n\n            const { canArchive, canSearch } = this.canArchive();\n\n            globals.set({ searchString: null });\n\n            // Set showArchived to false whenever we change the route\n            this.setState({\n              menuItem,\n              showArchived: false,\n              showArchivedToggle: canArchive,\n              searchStringInput: '',\n              showSearch: canSearch\n            });\n          }\n        }\n      } else {\n        this.component = null;\n      }\n    }\n  };\n\n  onLocation = location => {\n    globals.set({ path: location.pathname });\n  };\n\n  componentDidUpdate(prevProps) {\n    const snackbarMessage = globals.get('snackbarMessage');\n    if (snackbarMessage) {\n      this.displaySnackbar(snackbarMessage);\n      globals.set({ snackbarMessage: null });\n    }\n\n    if (\n      this.props.redirectPath &&\n      this.props.redirectPath !== prevProps.redirectPath\n    ) {\n      this.redirect(this.props.redirectPath);\n    }\n\n    if (this.props.path !== prevProps.path) {\n      this.navigateTo(this.props.path);\n    }\n\n    if (this.props.confirmation !== prevProps.confirmation) {\n      // Show the popup if any of the confirmation info has changed\n      this.setState({ confirmationOpen: true });\n    }\n\n    if (this.props.searchString !== prevProps.searchString) {\n      // Pass search string down to current component\n      const menuItem = this.state.menuItem;\n      if (menuItem && menuItem.content.has('searchString')) {\n        menuItem.content.set({\n          searchString: this.props.searchString\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Allows us to listen to back and forward button clicks\n    this.unlisten = this.props.history.listen(this.onLocation);\n\n    if (registrar.client) {\n      // Wait for the session to load before loading the initial component so that we can do things\n      // like route based on a user's role\n      registrar.client.user.awaitSession();\n    }\n\n    // Load the correct component based on the initial path\n    this.onLocation(this.props.location);\n\n    // TODO: is this too inefficient in that it cascades a lot of unecessary events? Instead, could:\n    // 1. move more logic to app layer so that only cascade when need new window 2. use something\n    // like a global scroll listener that the component can use when it is active\n    window.addEventListener('scroll', e => {\n      if (this.state.menuItem) {\n        this.state.menuItem.content.emit('scroll', e);\n      }\n    });\n\n    // Handle immediate redirects, e.g. if user is not logged in\n    if (this.props.redirectPath) {\n      this.redirect(this.props.redirectPath);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  displaySnackbar(message) {\n    this.setState({ snackbarOpen: true, snackbarMessage: message });\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleArchivedChange = event => {\n    this.setState({ showArchived: event.target.checked });\n\n    const { menuItem } = this.state;\n\n    if (menuItem) {\n      menuItem.content.set({ showArchived: event.target.checked });\n\n      // Scroll to the top of the page as otherwise it is confusing to the user as to why they are\n      // dumped in some random place within the newly queried data.\n      window.scrollTo({\n        top: 0\n      });\n    }\n  };\n\n  handleSearchStringInputChange = searchStringInput => {\n    this.setState({\n      searchStringInput\n    });\n  };\n\n  handleSearch = searchStringInput => {\n    this.setState(\n      {\n        searchStringInput\n      },\n      () => {\n        globals.set({\n          searchString: searchStringInput ? searchStringInput : null\n        });\n      }\n    );\n  };\n\n  archivedToggle() {\n    const { showArchived, showArchivedToggle } = this.state;\n\n    // A component must not switch from controlled to uncontrolled so we need to avoid setting\n    // checked=undefined\n    const showArchivedChecked = showArchived ? true : false;\n\n    let archivedToggle = null;\n    if (showArchivedToggle) {\n      archivedToggle = (\n        <Tooltip title={showArchived ? 'Show Active' : 'Show Deleted'}>\n          <MUISwitch\n            onChange={this.handleArchivedChange}\n            checked={showArchivedChecked}\n          />\n        </Tooltip>\n      );\n    }\n\n    return archivedToggle;\n  }\n\n  searchBox(fullWidth) {\n    const { classes } = this.props;\n    const { searchStringInput, showSearch } = this.state;\n\n    let searchBox = null;\n    if (showSearch) {\n      searchBox = (\n        <SearchBar\n          fullWidth={fullWidth}\n          className={classes.alignRight}\n          searchString={searchStringInput}\n          onChange={this.handleSearchStringInputChange}\n          onSearch={this.handleSearch}\n        />\n      );\n    }\n    return searchBox;\n  }\n\n  toggleShowSearch = () => {\n    this.setState({ showSearchOnMobile: !this.state.showSearchOnMobile });\n  };\n\n  menuButton() {\n    const { classes } = this.props;\n    const responsive = this.isResponsive();\n    return (\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={this.handleDrawerToggle}\n        className={responsive ? classes.navIconHide : ''}\n      >\n        <Icon icon=\"Menu\" />\n      </IconButton>\n    );\n  }\n\n  title() {\n    const { menuItem } = this.state;\n    return (\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n        {menuItem ? menuItem.label : ''}\n      </Typography>\n    );\n  }\n\n  appBar() {\n    const { classes, width } = this.props;\n    const { showSearchOnMobile } = this.state;\n\n    const onMobile = isWidthDown('sm', width);\n    const responsive = this.isResponsive();\n\n    let bar = null;\n\n    if (onMobile) {\n      if (showSearchOnMobile) {\n        bar = (\n          <React.Fragment>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"close search\"\n              onClick={this.toggleShowSearch}\n            >\n              <Icon icon=\"ArrowBack\" />\n            </IconButton>\n            {this.searchBox(true)}\n          </React.Fragment>\n        );\n      } else {\n        bar = (\n          <React.Fragment>\n            {this.menuButton()}\n            {this.title()}\n            {this.archivedToggle()}\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"toggle search\"\n              onClick={this.toggleShowSearch}\n              className={classes.alignRight}\n            >\n              <Icon icon=\"Search\" />\n            </IconButton>\n          </React.Fragment>\n        );\n      }\n    } else {\n      bar = (\n        <React.Fragment>\n          {this.menuButton()}\n          {this.title()}\n          {this.archivedToggle()}\n          {this.searchBox()}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <AppBar\n        elevation={1} // tone down the elevation\n        className={\n          classes.appBar + (responsive ? ` ${classes.appBarResponsive}` : '')\n        }\n      >\n        <Toolbar>{bar}</Toolbar>\n      </AppBar>\n    );\n  }\n\n  isResponsive() {\n    return !this.props.menuAlwaysTemporary;\n  }\n\n  render() {\n    const { classes, component, confirmation } = this.props;\n    const {\n      mobileOpen,\n      menuItem,\n      snackbarOpen,\n      snackbarMessage,\n      confirmationOpen\n    } = this.state;\n\n    const responsive = this.isResponsive();\n\n    const menu = component.get('menu');\n\n    // Use the path from the location prop as this.state.path may not be up to date\n    const path = this.props.location.pathname;\n\n    const comp = this.component ? (\n      <Component component={this.component} />\n    ) : null;\n\n    const appBar = this.appBar();\n\n    const menuSidebar = (\n      <Menu\n        component={menu}\n        onDrawerToggle={this.handleDrawerToggle}\n        mobileOpen={mobileOpen}\n        onNavigate={this.handleNavigate}\n        path={path}\n        responsive={responsive}\n      />\n    );\n\n    let fullScreenStyle = null;\n    if (menuItem && menuItem.fullScreen) {\n      fullScreenStyle = {\n        marginLeft: 0,\n        marginTop: 0\n      };\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          {menuItem && menuItem.fullScreen ? null : appBar}\n          {menuItem && menuItem.fullScreen ? null : menuSidebar}\n          <main\n            className={\n              classes.content +\n              (responsive ? ` ${classes.contentResponsive}` : '')\n            }\n            style={fullScreenStyle}\n          >\n            <Switch>\n              {/* Omitting path so that all paths are matched */}\n              <Route />\n            </Switch>\n\n            {comp}\n\n            <Snackbar\n              open={snackbarOpen}\n              message={snackbarMessage}\n              onClose={this.handleSnackbarClose}\n            />\n            <ConfirmationDialog\n              open={confirmationOpen}\n              onClose={this.handleConfirmationClose}\n              title={confirmation ? confirmation.title : null}\n              text={confirmation ? confirmation.text : null}\n              alert={confirmation ? confirmation.alert : null}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp = withStyles(styles, { withTheme: true })(App);\nApp = withWidth()(App);\nApp = withRouter(App);\nApp = attach(['menuAlwaysTemporary'])(App);\nApp = attach(\n  ['path', 'redirectPath', 'snackbarMessage', 'confirmation', 'searchString'],\n  globals\n)(App);\nexport default App;\n","import React from 'react';\nimport AppUI from './app';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport { BrowserRouter, Prompt } from 'react-router-dom';\nimport globals from 'mson/lib/globals';\nimport attach from './attach';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    // primary: blue,\n    // type: 'dark',\n    // secondary: cyan\n    secondary: lightBlue\n  },\n\n  // TODO: remove after next major Material-UI release\n  // (https://material-ui.com/style/typography/#migration-to-typography-v2)\n  typography: {\n    useNextVariants: true\n  }\n\n  // shadows: ['none']\n});\n\n// Note: BrowserRouter needs to be outside of App so that we can use withRouter\nclass AppContainer extends React.Component {\n  onNavigate = (message, callback) => {\n    globals.onNavigate(message, callback);\n  };\n\n  render() {\n    const { component, basename } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter\n          getUserConfirmation={this.onNavigate}\n          basename={basename}\n        >\n          {/* Wrapping div required by BrowserRouter */}\n          <div>\n            <AppUI component={component} />\n\n            {/* A Prompt is needed to capture back/forward button events with ReactRouter. message\n            is required, but the value is arbitrary */}\n            <Prompt message=\"foo\" />\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default attach(['basename'])(AppContainer);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './app-container';\nimport registrar from 'mson/lib/compiler/registrar';\nimport registerServiceWorker from './register-service-worker';\n\nexport default async app => {\n  // Was the client registered?\n  if (registrar.client) {\n    // Make sure we load the session before doing any rendering so that components can do their\n    // initial rendering based on the user's authentication status\n    await registrar.client.user.awaitSession();\n  }\n\n  ReactDOM.render(\n    <AppContainer component={app} />,\n    document.getElementById('root')\n  );\n  registerServiceWorker();\n};\n","export default {\n  name: 'app.App',\n  component: 'App',\n  // menuAlwaysTemporary: true,\n  basename: '/mson-react', // Root of site is https://redgeoff.github.io/mson-react\n  menu: {\n    component: 'Menu',\n    items: [\n      {\n        path: '/',\n        label: 'Home',\n        content: {\n          component: 'app.Home'\n        }\n      },\n      {\n        path: '/fields',\n        label: 'Fields',\n        content: {\n          component: 'app.FieldsScreen'\n        }\n      },\n      {\n        path: '/contacts',\n        label: 'Contacts',\n        items: [\n          {\n            path: '/contacts',\n            label: 'Contacts LocalStorage',\n            content: {\n              component: 'app.ContactsLocalStorage'\n            }\n          },\n          {\n            path: '/contacts-firebase',\n            label: 'Contacts Firebase',\n            content: {\n              component: 'app.ContactsFirebase'\n            }\n          }\n        ]\n      },\n      {\n        path: '/tasks',\n        label: 'Tasks',\n        items: [\n          {\n            path: '/tasks',\n            label: 'Tasks LocalStorage',\n            content: {\n              component: 'app.TasksLocalStorage'\n            }\n          },\n          {\n            path: '/tasks-firebase',\n            label: 'Tasks Firebase',\n            content: {\n              component: 'app.TasksFirebase'\n            }\n          }\n        ]\n      },\n      {\n        path: '/form-builder',\n        label: 'Form Builder',\n        content: {\n          component: 'app.FormBuilder'\n        }\n      },\n      {\n        path: '/contact/edit',\n        label: 'Edit Contact',\n        content: {\n          component: 'app.EditContact'\n        }\n      },\n      {\n        path: '/contact-no-mson',\n        label: 'Contact No MSON',\n        content: {\n          component: 'app.ContactNoMSON'\n        }\n      },\n      {\n        path: '/grid',\n        label: 'Grid',\n        content: {\n          component: 'app.Grid'\n        }\n      }\n    ]\n  }\n};\n","import Form from 'mson/lib/form';\nimport { TextField, EmailField, ButtonField } from 'mson/lib/fields';\nimport compiler from 'mson/lib/compiler';\nimport globals from 'mson/lib/globals';\n\n// Note: you can also use the following instead of the import above\n// const Form = compiler.getCompiledComponent('Form');\n\nclass ContactNoMSON extends Form {\n  _create(props) {\n    super._create(props);\n\n    this.set({\n      fields: [\n        new TextField({\n          name: 'firstName',\n          label: 'First Name',\n          required: true,\n          block: false\n        }),\n        new TextField({ name: 'lastName', label: 'Last Name', required: true }),\n        new EmailField({ name: 'email', label: 'Email' }),\n        new ButtonField({\n          name: 'import',\n          label: 'Import',\n          icon: 'ImportContacts'\n        }),\n        new ButtonField({\n          name: 'submit',\n          label: 'Submit',\n          type: 'submit',\n          icon: 'Save'\n        }),\n        new ButtonField({ name: 'cancel', label: 'Cancel', icon: 'Cancel' })\n      ]\n    });\n\n    this.on('import', () => {\n      this.setValues({\n        firstName: 'Prince',\n        lastName: 'Nelson',\n        email: 'prince@example.com'\n      });\n    });\n\n    this.on('submit', () => {\n      // TODO: do something like contact an API\n\n      const values = this.getValues();\n      console.log('submitting', values);\n\n      globals.displaySnackbar(\n        `Submitted ${values.firstName} ${values.lastName}`\n      );\n    });\n\n    this.on('cancel', () => {\n      // Redirect home\n      globals.redirect('/');\n    });\n  }\n}\n\ncompiler.registerComponent('app.ContactNoMSON', ContactNoMSON);\n","export default {\n  name: 'app.Contacts',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field'\n      }\n    ]\n  },\n  fields: [\n    {\n      component: 'CollectionField',\n      name: 'contacts',\n      label: 'Contacts',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n              block: false\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name'\n            },\n            {\n              name: 'email',\n              component: 'EmailField',\n              label: 'Email'\n            }\n          ]\n        }\n      },\n      store: '{{store}}'\n    }\n  ]\n};\n","export default {\n  name: 'app.ContactsLocalStorage',\n  component: 'app.Contacts',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactsLocalStorage'\n  }\n};\n","export default {\n  name: 'app.ContactsFirebase',\n  component: 'app.Contacts',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'contacts'\n  }\n};\n","export default {\n  name: 'app.EditContact',\n  component: 'RecordEditor',\n  baseForm: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'firstName',\n        component: 'TextField',\n        label: 'First Name',\n        required: true,\n        block: false\n      },\n      {\n        name: 'lastName',\n        component: 'TextField',\n        label: 'Last Name'\n      },\n      {\n        name: 'email',\n        component: 'EmailField',\n        label: 'Email'\n      }\n    ],\n    listeners: [\n      {\n        event: 'load',\n        actions: [\n          {\n            // Default the id to '1' so that we can edit the doc later. Usually, this id would come\n            // from the route or the user's session\n            component: 'Set',\n            name: 'fields.id.value',\n            value: '1'\n          }\n        ]\n      }\n    ]\n  },\n  label: 'Contact',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactLocalStorage'\n  },\n  storeWhere: {\n    id: '1'\n  }\n};\n","export default {\n  name: 'app.FieldsScreen',\n  component: 'app.Fields',\n  fields: [\n    {\n      name: 'import',\n      component: 'ButtonField',\n      label: 'Import',\n      icon: 'ImportContacts'\n    },\n    {\n      name: 'reset',\n      component: 'ButtonField',\n      label: 'Reset',\n      icon: 'ClearAll'\n    },\n    {\n      name: 'toggleDisplayValues',\n      component: 'ButtonField',\n      label: 'Show Display Values',\n      icon: 'ViewHeadline'\n    },\n    {\n      name: 'toggleEditable',\n      component: 'ButtonField',\n      label: 'Immutable',\n      icon: 'NotInterested'\n    },\n    {\n      name: 'toggleDisabled',\n      component: 'ButtonField',\n      label: 'Disable',\n      icon: 'Lock'\n    },\n    {\n      name: 'toggleFullWidth',\n      component: 'ButtonField',\n      label: 'Full Width',\n      icon: 'FormatAlignJustify'\n    },\n    {\n      name: 'log',\n      component: 'ButtonField',\n      label: 'Log Values',\n      icon: 'MoveToInbox'\n    }\n  ],\n  listeners: [\n    {\n      event: 'import',\n      actions: [\n        {\n          component: 'Set',\n          name: 'component',\n          value: {\n            'fields.addressField.value': {\n              addressLine1: '121 Pike Street',\n              addressLine2: 'Suite 201',\n              city: 'Seatte',\n              stateProvince: 'WA',\n              postalCode: '98107',\n              country: 'US'\n            },\n            'fields.booleanField.value': true,\n            'fields.chainedSelectField.value': [2, 5, 9, 10],\n            'fields.chainedSelectListField.value': [[1, 3, 7], [2, 5, 9, 10]],\n            'fields.cityField.value': 'Seattle',\n            'fields.collectionField.value': [\n              {\n                id: 'daenerys',\n                firstName: 'Daenerys',\n                lastName: 'Targaryen'\n              },\n              {\n                id: 'jon',\n                firstName: 'Jon',\n                lastName: 'Snow'\n              },\n              {\n                id: 'tyrion',\n                firstName: 'Tyrion',\n                lastName: 'Lannister'\n              }\n            ],\n            'fields.countryField.value': 'US',\n            'fields.dateField.value': '2018-09-27T17:24:24.960Z',\n            'fields.emailField.value': 'test@example.com',\n            'fields.formField.value': {\n              github: 'github.com/redgeoff',\n              medium: 'medium.com/@redgeoff',\n              twitter: 'twitter.com/redgeoff7'\n            },\n            // 'fields.github.value': 'github.com/redgeoff',\n            // 'fields.medium.value': 'medium.com/@redgeoff',\n            // 'fields.twitter.value': 'twitter.com/redgeoff7',\n            'fields.idField.value': 'id-123',\n            'fields.integerField.value': 123,\n            'fields.listFieldEmail.value': [\n              'test1@example.com',\n              'test2@example.com'\n            ],\n            'fields.listFieldName.value': [\n              { firstName: 'Ella', lastName: 'Fitzgerald' },\n              { firstName: 'Ray', lastName: 'Charles' }\n            ],\n            'fields.moneyField.value': 1000000.11,\n            'fields.numberField.value': 123.4,\n            'fields.passwordField.value': 'password123',\n            'fields.personFullNameField.value': {\n              firstName: 'Daenerys',\n              lastName: 'Targaryen'\n            },\n            'fields.personNameField.value': 'Daenerys',\n            'fields.phoneField.value': '6461234567',\n            'fields.postalCodeField.value': '98107',\n            'fields.provinceField.value': 'British Columbia',\n            'fields.selectField.value': 'red',\n            'fields.selectFieldMult.value': ['red', 'blue'],\n            'fields.selectListField.value': ['red', 'green'],\n            'fields.stateField.value': 'WA',\n            'fields.timeField.value': '2018-09-27T17:24:24.960Z',\n            'fields.textField.value': 'Go MSON',\n            'fields.textListField.value': ['MSON', 'React', 'Material-UI'],\n            'fields.urlField.value': 'mson.co'\n          }\n        }\n      ]\n    },\n    {\n      event: 'reset',\n      actions: [\n        {\n          component: 'Set',\n          name: 'reset',\n          value: true\n        }\n      ]\n    },\n    {\n      event: 'toggleDisplayValues',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.useDisplayValue': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: true\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Hide Display Values',\n                  icon: 'Input'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: false\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Show Display Values',\n                  icon: 'ViewHeadline'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleEditable',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.editable': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: true,\n                'fields.toggleEditable': {\n                  label: 'Immutable',\n                  icon: 'NotInterested'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: false,\n                'fields.toggleEditable': {\n                  label: 'Editable',\n                  icon: 'Edit'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleDisabled',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.disabled': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: true,\n                'fields.toggleDisabled': {\n                  label: 'Enable',\n                  icon: 'LockOpen'\n                }\n              }\n            },\n            {\n              // Renable so we can still click the button\n              component: 'Set',\n              name: 'fields.toggleDisabled.disabled',\n              value: false\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: false,\n                'fields.toggleDisabled': {\n                  label: 'Disable',\n                  icon: 'Lock'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleFullWidth',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.fullWidth': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: true,\n                'fields.toggleFullWidth': {\n                  label: 'Flex Width',\n                  icon: 'FormatAlignLeft'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: false,\n                'fields.toggleFullWidth': {\n                  label: 'Full Width',\n                  icon: 'FormatAlignLeft'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'log',\n      actions: [\n        {\n          component: 'ConsoleLog',\n          message: '{{value}}'\n        }\n      ]\n    }\n  ]\n};\n","const chainedSelectOptions = [\n  { value: 1, parentValue: null, label: 'Germany' },\n  { value: 2, parentValue: null, label: 'USA' },\n\n  { value: 3, parentValue: 1, label: 'BMW' },\n  { value: 4, parentValue: 1, label: 'Mercedes' },\n\n  { value: 5, parentValue: 2, label: 'Tesla' },\n\n  { value: 6, parentValue: 3, label: 'i3' },\n  { value: 7, parentValue: 3, label: 'i8' },\n  { value: 8, parentValue: 4, label: 'S-Class' },\n\n  { value: 9, parentValue: 5, label: 'Model S' },\n\n  { value: 10, parentValue: 9, label: 'Red' },\n  { value: 11, parentValue: 9, label: 'Blue' }\n];\n\nexport default {\n  name: 'app.Fields',\n  component: 'Form',\n  fields: [\n    {\n      component: 'AddressField',\n      name: 'addressField',\n      label: 'AddressField',\n      help: 'Example help',\n      required: true,\n      elevate: false\n    },\n\n    {\n      component: 'BooleanField',\n      name: 'booleanField',\n      label: 'BooleanField',\n      help: 'Example help'\n    },\n\n    {\n      name: 'buttonField',\n      component: 'ButtonField',\n      label: 'ButtonField',\n      icon: 'Save',\n      type: 'submit',\n      block: true\n    },\n\n    {\n      component: 'ChainedSelectField',\n      name: 'chainedSelectField',\n      label: 'ChainedSel',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions\n    },\n\n    {\n      component: 'ChainedSelectListField',\n      name: 'chainedSelectListField',\n      label: 'ChainSelList',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions\n    },\n\n    {\n      name: 'cityField',\n      component: 'CityField',\n      label: 'CityField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'CollectionField',\n      name: 'collectionField',\n      label: 'Records',\n      help: 'Example help',\n      required: true,\n      // maxColumns: 1,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name'\n            }\n          ]\n        }\n      }\n    },\n\n    {\n      name: 'countryField',\n      component: 'CountryField',\n      label: 'CountryField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true\n    },\n\n    {\n      name: 'dateField',\n      component: 'DateField',\n      label: 'DateField',\n      help: 'Example help',\n      // includeTime: true,\n      minDate: '2018-01-01T23:07:28.157Z',\n      maxDate: '2022-01-01T23:07:28.157Z',\n      required: true\n    },\n\n    {\n      component: 'EmailField',\n      name: 'emailField',\n      label: 'Email',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'FormField',\n      name: 'formField',\n      label: 'FormField',\n      help: 'Example help',\n      required: true,\n      // elevate: true,\n      form: {\n        component: 'Form',\n        fields: [\n          {\n            name: 'github',\n            component: 'URLField',\n            block: false,\n            label: 'GitHub'\n          },\n          {\n            name: 'medium',\n            component: 'URLField',\n            label: 'Medium'\n          },\n          {\n            name: 'twitter',\n            component: 'URLField',\n            label: 'Twitter'\n          }\n        ]\n      }\n    },\n\n    {\n      name: 'idField',\n      component: 'IdField',\n      label: 'IdField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'integerField',\n      component: 'IntegerField',\n      label: 'IntegerField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldEmail',\n      label: 'ListField Email',\n      singularLabel: 'Email',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'EmailField'\n        }\n      }\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldName',\n      label: 'ListField Name',\n      singularLabel: 'Name',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'PersonFullNameField'\n        }\n      }\n    },\n\n    {\n      name: 'moneyField',\n      component: 'MoneyField',\n      label: 'MoneyField',\n      help: 'Example help',\n      // prefix: '€',\n      // decimalSymbol: ',',\n      // thousandsSeparatorSymbol: '.',\n      required: true\n    },\n\n    {\n      name: 'numberField',\n      component: 'NumberField',\n      label: 'NumberField',\n      help: 'Example help',\n      // includeThousandsSeparator: true,\n      required: true\n    },\n\n    {\n      name: 'passwordField',\n      component: 'PasswordField',\n      label: 'PasswordField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'personFullNameField',\n      component: 'PersonFullNameField',\n      label: 'PersonFullNameField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'personNameField',\n      component: 'PersonNameField',\n      label: 'PersonNameField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'phoneField',\n      component: 'PhoneField',\n      label: 'PhoneField',\n      help: 'Example help',\n      // defaultMask: '.... ......',\n      required: true\n    },\n\n    {\n      name: 'postalCodeField',\n      component: 'PostalCodeField',\n      label: 'PostalCodeField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'provinceField',\n      component: 'ProvinceField',\n      label: 'ProvinceField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'ReCAPTCHAField'\n    },\n\n    {\n      name: 'selectField',\n      component: 'SelectField',\n      label: 'SelectField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'selectFieldMult',\n      component: 'SelectField',\n      label: 'SelFld (mult)',\n      help: 'Example help',\n      required: true,\n      multiple: true,\n      blankString: 'None',\n      // autocomplete: false,\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'selectListField',\n      component: 'SelectListField',\n      label: 'SelListField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None', // Provide a way for the user to delete the entry\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'stateField',\n      component: 'StateField',\n      label: 'StateField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true\n    },\n\n    {\n      name: 'text',\n      component: 'Text',\n      text:\n        '# Text\\nCan contain any [markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)'\n    },\n\n    {\n      name: 'timeField',\n      component: 'TimeField',\n      label: 'TimeField',\n      help: 'Example help',\n      // showSeconds: true,\n      required: true\n    },\n\n    {\n      name: 'textField',\n      component: 'TextField',\n      label: 'TextField',\n      help: 'Example help',\n      // mask: ['(', '/[1-9]/', '/\\\\d/', '/\\\\d/', ')'],\n      // mask: '(...)',\n      required: true\n    },\n\n    {\n      name: 'textListField',\n      component: 'TextListField',\n      label: 'TextListField',\n      help: 'Example help',\n      singularLabel: 'Text Item',\n      required: true\n    },\n\n    {\n      name: 'urlField',\n      component: 'URLField',\n      label: 'URLField',\n      help: 'Example help',\n      // newWindow: true,\n      required: true\n    }\n  ]\n};\n","export default {\n  name: 'app.FormBuilder',\n  component: 'FormBuilder',\n  'fields.form.form.fields.fields.store': {\n    component: 'LocalStorageStore',\n    storeName: 'myForm'\n  }\n};\n","export default {\n  name: 'app.Grid',\n  component: 'Grid',\n  items: [\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# A'\n      }\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# B'\n      }\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# C'\n      }\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        component: 'Text',\n        text: '# D'\n      }\n    },\n    {\n      component: 'GridItem',\n      md: 6,\n      xs: 12,\n      content: {\n        name: 'toggleA',\n        component: 'ButtonField',\n        label: 'Toggle A',\n        listeners: [\n          {\n            event: 'click',\n            actions: [\n              {\n                component: 'Action',\n                if: {\n                  'parent.parent.items.0.hidden': true\n                },\n                actions: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: false\n                  }\n                ],\n                else: [\n                  {\n                    component: 'Set',\n                    name: 'parent.parent.items.0.hidden',\n                    value: true\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n};\n","export default {\n  name: 'app.Home',\n  component: 'Text',\n  text: '# Welcome\\nCheck out the examples on the left'\n};\n","export default {\n  name: 'app.Tasks',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field'\n      }\n    ]\n  },\n  fields: [\n    {\n      component: 'Text',\n      name: 'header',\n      text: '(drag to reorder)'\n    },\n    {\n      component: 'CollectionField',\n      name: 'tasks',\n      label: 'Tasks',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      forbidOrder: false,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'task',\n              component: 'TextField',\n              label: 'Task',\n              multiline: true,\n              required: true\n            },\n            {\n              name: 'due',\n              component: 'DateField',\n              label: 'Due'\n            }\n          ]\n        }\n      },\n      store: '{{store}}'\n    }\n  ]\n};\n","export default {\n  name: 'app.TasksLocalStorage',\n  component: 'app.Tasks',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'tasksLocalStorage'\n  }\n};\n","export default {\n  name: 'app.TasksFirebase',\n  component: 'app.Tasks',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'tasks'\n  }\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Form from './form';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Field from './fields/field';\nimport compiler from 'mson/lib/compiler';\nimport each from 'lodash/each';\nimport attach from './attach';\nimport ComponentField from 'mson/lib/fields/component-field';\n\nconst styles = theme => ({\n  form: {\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 390px)',\n    marginTop: theme.spacing(3)\n  }\n});\n\nclass FieldEditorForm extends React.PureComponent {\n  state = {\n    field: null\n  };\n\n  handleValueChange = value => {\n    const form = this.props.component;\n    let { field } = this.state;\n    let component = null;\n\n    // Is the field changing?\n    if (!field || value.componentName !== field.getClassName()) {\n      if (field) {\n        // Prevent listener leak\n        field.destroy();\n      }\n\n      if (value.componentName) {\n        component = compiler.newComponent({\n          component: value.componentName\n        });\n\n        // Is the component a field?\n        if (component.isField) {\n          field = component;\n        } else {\n          // e.g. Text component is not a field\n          field = new ComponentField({ content: component });\n        }\n\n        // Auto validate so that the user can preview how the validation will work\n        const validate = () => {\n          field.clearErr();\n          field.validate();\n        };\n        field.on('value', validate);\n        field.on('touched', validate);\n      } else {\n        field = null;\n      }\n    }\n\n    if (field) {\n      // Set field values using form values. The corresponding values may not exist if the field was\n      // just changed.\n      const values = form.getValues({ default: false });\n      component =\n        field.getClassName() === 'ComponentField'\n          ? field.get('content')\n          : field;\n      each(values, (value, name) => {\n        if (component.has(name)) {\n          component.set({ [name]: value });\n        }\n      });\n    }\n\n    this.setState({ field });\n  };\n\n  componentDidMount() {\n    // Note: we use a listener on value instead of attaching to value as a shallow compare of value\n    // would not trigger a state change.\n    this.props.component.on('value', this.handleValueChange);\n\n    // Initialize with the current value\n    this.handleValueChange(this.props.component.getValues());\n  }\n\n  componentWillUnmount() {\n    this.props.component.removeListener('value', this.handleValueChange);\n  }\n\n  render() {\n    const { component, classes, formTag, mode } = this.props;\n    const { field } = this.state;\n\n    let preview = null;\n    if (field && mode !== 'read') {\n      preview = (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Preview\n            </Typography>\n            <Field component={field} />\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (mode !== 'read') {\n      return (\n        <React.Fragment>\n          <div className={classes.preview}>{preview}</div>\n          <div className={classes.form}>\n            <Form component={component} formTag={formTag} mode={mode} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (field) {\n      // Disable so that the user can edit the field with a click\n      return <Field component={field} disabled={true} />;\n    } else {\n      return null;\n    }\n  }\n}\n\nFieldEditorForm = withStyles(styles)(FieldEditorForm);\nFieldEditorForm = attach(['mode'])(FieldEditorForm);\n\nexport default FieldEditorForm;\n","import React from 'react';\nimport Form from './form';\nimport Component from './component';\nimport attach from './attach';\n\nclass FormEditor extends React.Component {\n  render() {\n    const { editable, component } = this.props;\n    if (editable !== false) {\n      return <Form {...this.props} />;\n    } else {\n      // Note: we need to use a getter to generate the definition\n      const definition = component.get('definition');\n\n      // Needed as form tag cannot be a descendant of a form tag\n      const formTag = false;\n\n      return <Component definition={definition} formTag={formTag} />;\n    }\n  }\n}\n\nFormEditor = attach(['editable'])(FormEditor);\n\nexport default FormEditor;\n","import compiler from 'mson/lib/compiler';\nimport * as components from './components';\nimport globals from 'mson/lib/globals';\nimport uiComponents from '../components';\nimport FieldEditorForm from 'mson/lib/form/field-editor-form';\nimport FieldEditorFormUI from '../field-editor-form';\nimport FormEditor from 'mson/lib/form/form-editor';\nimport FormEditorUI from '../form-editor';\nimport FormBuilder from 'mson/lib/form/form-builder';\n\n// Set the site key when using the ReCAPTCHAField\nglobals.set({ reCAPTCHASiteKey: '6LdIbGMUAAAAAJnipR9t-SnWzCbn0ZX2myXBIauh' });\n\n// Register optional core components\ncompiler.registerComponent('FieldEditorForm', FieldEditorForm);\nuiComponents.FieldEditorForm = FieldEditorFormUI;\ncompiler.registerComponent('FormEditor', FormEditor);\nuiComponents.FormEditor = FormEditorUI;\ncompiler.registerComponent('FormBuilder', FormBuilder);\n\n// Register all the components\nfor (let name in components) {\n  let component = components[name];\n  compiler.registerComponent(name, component);\n}\n\n// Instantiate the app\nconst app = compiler.newComponent({\n  component: 'app.App',\n});\n\nexport default app;\n","import { render } from '../bundle';\nimport 'typeface-roboto';\nimport app from './app';\n\n// Render the app\nrender(app);\n"],"sourceRoot":""}